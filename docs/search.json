[{"path":"https://kharchenkolab.github.io/numbat/articles/hmm.html","id":"analyzing-scrna-seq-data","dir":"Articles","previous_headings":"","what":"Analyzing scRNA-seq data","title":"Numbat haplotype-aware HMM","text":"scRNA-seq data, say priori knowledge cell groupings. can aggregate cells cluster run HMM cell population discover CNVs.","code":"allele_counts = fread('http://pklab.med.harvard.edu/teng/data/hmm_example/TNBC1_allele_counts.tsv.gz') gene_counts = readRDS(url('http://pklab.med.harvard.edu/teng/data/hmm_example/TNBC1_gene_counts.rds')) pagoda = readRDS(url('http://pklab.med.harvard.edu/teng/data/con_TNBC1.rds')) pagoda$plotEmbedding() clusters = pagoda$clusters$PCA$multilevel  bulks = list()  for (cluster in c('1','3','5')) {        cells = names(clusters[clusters == cluster])         bulks[[cluster]] = get_bulk(         gene_counts[,cells],         ref_hca,         allele_counts %>% filter(cell %in% cells),         gtf_hg38,         genetic_map_hg38     ) %>%     mutate(sample = cluster)        bulks[[cluster]] = bulks[[cluster]] %>% analyze_bulk(t = 1e-5)    }  bind_rows(bulks) %>% plot_bulks()"},{"path":"https://kharchenkolab.github.io/numbat/articles/hmm.html","id":"analyzing-bulk-rna-seq-data","dir":"Articles","previous_headings":"","what":"Analyzing bulk RNA-seq data","title":"Numbat haplotype-aware HMM","text":"Numbat HMM can also used detect CNVs bulk RNA-seq data. Sample MN-1037 diploid genome can use create reference expression profile. can now analyze samples using Numbat HMM.","code":"allele_counts = fread('http://pklab.med.harvard.edu/teng/data/hmm_example/MN-5_TUMOR_allele_counts.tsv.gz') gene_counts = readRDS(url('http://pklab.med.harvard.edu/teng/data/hmm_example/MN_gene_counts.rds')) ref_internal = gene_counts[,'MN-1037_TUMOR',drop=F] %>% {./sum(.)} head(ref_internal) ##          MN-1037_TUMOR ## 7SK       0.000000e+00 ## A1BG      1.107976e-06 ## A1BG-AS1  5.003764e-07 ## A1CF      3.574117e-08 ## A2ML1     3.931529e-07 ## A4GALT    9.314150e-05 sample = 'MN-5_TUMOR'  bulk = get_bulk(         count_mat = gene_counts[,sample,drop=F],         df_allele = allele_counts,         lambdas_ref = ref_internal,         genetic_map = genetic_map_hg38,         gtf = gtf_hg38     ) %>%      analyze_bulk()  bulk %>% plot_psbulk(min_depth = 15)"},{"path":"https://kharchenkolab.github.io/numbat/articles/numbat.html","id":"table-of-contents","dir":"Articles","previous_headings":"","what":"Table of contents","title":"","text":"Prerequisites Installation Preparing data Running Numbat Understanding results","code":""},{"path":"https://kharchenkolab.github.io/numbat/articles/numbat.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"","text":"Numbat uses cellsnp-lite generating SNP pileup data eagle2 phasing. Please follow installation instructions make sure binary executables can found $PATH. cellsnp-lite eagle2 samtools Additionally, Numbat needs common SNP VCF phasing reference panel. can use 1000 Genome reference : 1000G SNP VCF 1000G Reference Panel Note: currently Numbat supports human hg19 hg38 reference.","code":"# hg38 wget https://sourceforge.net/projects/cellsnp/files/SNPlist/genome1K.phase3.SNP_AF5e2.chr1toX.hg38.vcf.gz # hg19 wget https://sourceforge.net/projects/cellsnp/files/SNPlist/genome1K.phase3.SNP_AF5e2.chr1toX.hg19.vcf.gz # hg38 wget http://pklab.med.harvard.edu/teng/data/1000G_hg38.zip # hg19 wget http://pklab.med.harvard.edu/teng/data/1000G_hg19.zip"},{"path":"https://kharchenkolab.github.io/numbat/articles/numbat.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"","text":"can install numbat R package via: get recent updates, can install development version:","code":"devtools::install_github(\"https://github.com/kharchenkolab/numbat\") devtools::install_github(\"https://github.com/kharchenkolab/Numbat/tree/devel\")"},{"path":"https://kharchenkolab.github.io/numbat/articles/numbat.html","id":"preparing-data","dir":"Articles","previous_headings":"","what":"Preparing data","title":"","text":"Prepare allele data. Run preprocessing script (pileup_and_phase.R) count alleles phase SNPs. Note: running SMART-seq mode, may provide file containing list bams (line) --bams file containing list cell names (line) --barcodes. running bulk RNA-seq mode, --barcodes argument need provided. produce file named {sample}_allele_counts.tsv.gz specified output directory, contains cell-level phased allele counts. multiple samples individual provided, one allele count file sample. outputs include phased vcfs phasing/ folder raw pileup counts pileup/. Prepare expression data. Numbat takes gene cell integer UMI count matrix input. can directly use results upstream transcriptome quantification pipelines 10x CellRanger. Prepare expression reference, gene cell type matrix normalized expression values (raw gene counts divided total counts). quick start, may use HCA collection (ref_hca) ships package. matched normal cells (ideally, various cell type) patient dataset like make references, may use utility function:","code":"usage: pileup_and_phase.R [-h] --label LABEL --samples SAMPLES --bams BAMS                           --barcodes BARCODES --gmap GMAP [--eagle EAGLE]                           --snpvcf SNPVCF --paneldir PANELDIR --outdir OUTDIR                           --ncores NCORES [--UMItag UMITAG]                           [--cellTAG CELLTAG] [--smartseq]  Run SNP pileup and phasing with 1000G  optional arguments:   -h, --help           show this help message and exit   --label LABEL        Individual label   --samples SAMPLES    Sample names, comma delimited   --bams BAMS          BAM files, one per sample, comma delimited   --barcodes BARCODES  Cell barcode files, one per sample, comma delimited   --gmap GMAP          Path to genetic map provided by Eagle2 (e.g. Eagle_v2.4.1/tables/genetic_map_hg38_withX.txt.gz)   --snpvcf SNPVCF      SNP VCF for pileup   --paneldir PANELDIR  Directory to phasing reference panel (BCF files)   --outdir OUTDIR      Output directory   --ncores NCORES      Number of cores   --UMItag UMITAG      UMI tag in bam. Should be Auto for 10x and XM for                        Slide-seq   --cellTAG CELLTAG    Cell tag in bam. Should be CB for 10x and XC for Slide-                        seq   --smartseq           running with SMART-seq mode   --bulk               running with bulk RNA-seq mode # count_mat is a gene x cell raw count matrices # cell_annot is a dataframe with columns \"cell\" and \"group\" ref_internal = aggregate_counts(count_mat, cell_annot)"},{"path":"https://kharchenkolab.github.io/numbat/articles/numbat.html","id":"running-numbat","dir":"Articles","previous_headings":"","what":"Running Numbat","title":"","text":"example (ATC2 Gao et al), gene expression count matrix allele dataframe already prepared . Note: wish use custom reference, please use aggregate_counts function per example preparing data. need include reference cells count_mat df_allele; provide lambdas_ref.","code":"library(numbat)  # run out = run_numbat(     count_mat_ATC2, # gene x cell integer UMI count matrix      ref_hca, # reference expression profile, a gene x cell type normalized expression level matrix     df_allele_ATC2, # allele dataframe generated by pileup_and_phase script     gtf_hg38, # provided upon loading the package     genetic_map_hg38, # provided upon loading the package     t = 1e-5,     ncores = 4,     plot = TRUE,     out_dir = './test' )"},{"path":"https://kharchenkolab.github.io/numbat/articles/numbat.html","id":"run-parameters","dir":"Articles","previous_headings":"Running Numbat","what":"Run parameters","title":"","text":"parameters can consider tuning specific dataset. CNV detection t: transition probability used HMM. lower t appropriate tumors complex copy number landscapes (can expect breakpoints) sometimes better detecting subclonal events. higher t effective controlling false-positive rates CNV calls. gamma: Overdispersion allele counts (default: 20). 10x data, 20 recommended. Non-UMI protocols (e.g. SMART-Seq) usually produce noisier allele data, smaller value gamma recommended (e.g. 5). min_cells: minimum number cells pseudobulk HMM run. allele coverage per cell sparse dataset, consider setting threshold higher. multi_allelic: Whether enable calling multiallelic CNVs CNV filtering min_LLR: minimum log-likelihood ratio threshold filter CNVs (default: 5). ensure quality phylogeny inference, use confident CNVs reconstruct phylogeny. max_entropy: another criteria use filter CNVs phylogeny construction (default: 0.5). entropy binary posterior quantifies uncertainty event across single cells. value can 0 1 1 least stringent. Phylogeny tau: Stringency simplify mutational history (0-1). higher tau produces less clones simplified evolutionary history. Iterative optimization init_k: initial number subclusters use hclust initialization. Numbat default uses hierarchical clustering (hclust) smoothed expression values approximate initial phylogeny. cut initial tree k clusters. clusters means resolution initial stage subclonal CNV detection. default, set init_k 3. max_iter: maximum number iterations. Numbat iteratively optimizes phylogeny copy number estimations. practice, find results 2 iterations usually stable. check_convergence: stop iterating results converged (based consensus CNV segments). Parallelization ncores: number cores use single-cell CNV testing ncores_nni: number cores use phylogeny inference","code":""},{"path":"https://kharchenkolab.github.io/numbat/articles/numbat.html","id":"detecting-clonal-loh","dir":"Articles","previous_headings":"Running Numbat","what":"Detecting clonal LOH","title":"","text":"cell line data high-purity tumors, recommend running procedure identify exclude regions clonal deletions/LOH running Numbat. , aggregate cells pseudobulk, run SNP-density HMM: pass segs_loh Numbat run regions excluded baseline analysis.","code":"bulk = get_bulk(     count_mat = count_mat,     lambdas_ref = ref_hca,     df_allele = df_allele,     gtf = gtf_hg38,     genetic_map = genetic_map_hg38 )  segs_loh = bulk %>% detect_clonal_loh(t = 1e-4) out = run_numbat(     ....,     segs_loh = segs_loh )"},{"path":"https://kharchenkolab.github.io/numbat/articles/numbat.html","id":"understanding-results","dir":"Articles","previous_headings":"","what":"Understanding results","title":"","text":"detailed vignette interpret visualize Numbat results available: - Interpreting Numbat results Numbat generates number files output folder. file names post-fixed ith iteration phylogeny optimization. detailed list: gexp_roll_wide.tsv.gz: window-smoothed normalized expression profiles single cells hc.rds: hierarchical clustering result based smoothed expression bulk_subtrees_{}.tsv.gz: pseudobulk HMM profiles based subtrees defined current cell lineage tree segs_consensus_{}.tsv.gz: consensus segments subtree pseudobulk HMMs bulk_clones_{}.tsv.gz: pseudobulk HMM profiles based clones defined current cell lineage tree bulk_clones_{}.png: visualization clone pseudobulk HMM profiles exp_sc_{}.tsv.gz: single-cell expression profiles used single-cell CNV testing exp_post_{}.tsv: single-cell expression posteriors allele_post_{}.tsv: single-cell allele posteriors joint_post_{}.tsv: single-cell joint posteriors treeUPGMA_{}.rds: UPGMA tree treeNJ_{}.rds: NJ tree tree_list_{}.rds: list candidate phylogeneies maximum likelihood tree search tree_final_{}.rds: final tree simplification mut_graph_{}.rds: final mutation history clone_post_{}.rds: clone assignment tumor versus normal classification posteriors bulk_subtrees_{}.png: visualization subtree pseudobulk HMM profiles bulk_clones_{}.png: visualization clone pseudobulk HMM profiles panel_{}.png: visualization combined phylogeny CNV heatmap","code":""},{"path":"https://kharchenkolab.github.io/numbat/articles/results.html","id":"copy-number-landscape-and-single-cell-phylogeny","dir":"Articles","previous_headings":"","what":"Copy number landscape and single-cell phylogeny","title":"Interpreting Numbat results","text":"overview, can visualize CNV calls single-cells evolutionary relationships integrated plot panel: visualization, single-cell phylogeny (left) juxtaposed heatmap single-cell CNV calls (right). CNV calls colored type alterations (AMP, amplification, BAMP, balanced amplification, DEL, deletion, CNLoH, copy-neutral loss heterozygosity). colorbar -differentiates distinct genetic populations (genotype). dashed blue line separates predicted tumor versus normal cells. tells us dataset mainly consists three cell populations, normal population (gray) two tumor subclones (green yellow).","code":"mypal = c('1' = 'gray', '2' = \"#377EB8\", '3' = \"#4DAF4A\", '4' = \"#984EA3\")    nb$plot_phylo_heatmap(   clone_bar = TRUE,    p_min = 0.9,   pal_clone = mypal )"},{"path":"https://kharchenkolab.github.io/numbat/articles/results.html","id":"consensus-copy-number-segments","dir":"Articles","previous_headings":"","what":"Consensus copy number segments","title":"Interpreting Numbat results","text":"take look consensus segments.","code":"nb$plot_consensus()"},{"path":"https://kharchenkolab.github.io/numbat/articles/results.html","id":"bulk-cnv-profiles","dir":"Articles","previous_headings":"","what":"Bulk CNV profiles","title":"Interpreting Numbat results","text":"can also visualize CNV events pseudobulks data rich, aggregating cells clone:","code":"nb$bulk_clones %>%    filter(n_cells > 50) %>%   plot_bulks(     min_LLR = 10, # filtering CNVs by evidence     legend = FALSE   )"},{"path":"https://kharchenkolab.github.io/numbat/articles/results.html","id":"single-cell-cnv-calls","dir":"Articles","previous_headings":"","what":"Single-cell CNV calls","title":"Interpreting Numbat results","text":"Numbat probabilistically evaluates presence/absence CNVs single cells. cell-level CNV posteriors stored nb$joint_post dataframe: contains cell-level information specific CNV segments (seg), alteration type (cnv_state), joint posterior probability CNV (p_cnv), expression-based posterior (p_cnv_x), allele-based posterior (p_cnv_y). can visualize event-specific posteriors expression-based tSNE embedding:","code":"head(nb$joint_post) %>% select(cell, CHROM, seg, cnv_state, p_cnv, p_cnv_x, p_cnv_y) ##                        cell CHROM seg cnv_state        p_cnv     p_cnv_x ## 1: TNBC1_AAACCTGCACCTTGTC-1     1  1b       amp 0.9999999997 1.000000000 ## 2: TNBC1_AAACCTGCACCTTGTC-1     2  2a       amp 0.0002288397 0.001172894 ## 3: TNBC1_AAACCTGCACCTTGTC-1     3  3a       amp 0.0522751360 0.052273344 ## 4: TNBC1_AAACCTGCACCTTGTC-1     3  3c       amp 0.9147696619 0.982278728 ## 5: TNBC1_AAACCTGCACCTTGTC-1     4  4b       amp 0.8999658266 0.845619643 ## 6: TNBC1_AAACCTGCACCTTGTC-1     5  5a       amp 0.8070027728 0.778074329 ##       p_cnv_y ## 1: 0.03844235 ## 2: 0.09821435 ## 3: 0.50000000 ## 4: 0.10246769 ## 5: 0.61862288 ## 6: 0.53344303 plist = list() muts = c('1a', '3b', '22b') cnv_type = nb$joint_post %>% distinct(seg, cnv_state) %>% {setNames(.$cnv_state, .$seg)} for (mut in muts) {          plist[[mut]] = pagoda$plotEmbedding(         alpha=0.8,         size=1,          plot.na = F,          colors = nb$joint_post %>%             filter(seg == mut) %>%             {setNames(.$p_cnv, .$cell)},         show.legend = T,         mark.groups = F,         plot.theme = theme_bw(),         title = paste0(mut, '(', cnv_type[muts], ')')     ) +     scale_color_gradient2(low = 'royalblue', mid = 'white', high = 'red3', midpoint = 0.5, limits = c(0,1), name = 'Posterior') } wrap_plots(plist, guides = 'collect')"},{"path":"https://kharchenkolab.github.io/numbat/articles/results.html","id":"clonal-assignments","dir":"Articles","previous_headings":"","what":"Clonal assignments","title":"Interpreting Numbat results","text":"Numbat aggregates signals across subclone-specific CNVs probabilistically assign cells subclones. information regarding clonal assignments contained nb$clone_post dataframe. clone_opt denotes maximum likelihood assignment cell specific clone. p_{1..4} detailed breakdown posterior probability cell belongs clone, respectively. visualize clonal decomposition tSNE embedding. Note clone 1 always normal cells.","code":"nb$clone_post %>% head() %>% select(cell, clone_opt, p_1, p_2, p_3, p_4) ##                        cell clone_opt           p_1          p_2          p_3 ## 1: TNBC1_AAACCTGCACCTTGTC-1         4  1.162495e-72 2.105425e-20 3.478936e-29 ## 2: TNBC1_AAACGGGAGTCCTCCT-1         1  1.000000e+00 5.814741e-51 5.920463e-95 ## 3: TNBC1_AAACGGGTCCAGAGGA-1         4 2.434561e-100 2.175022e-14 2.085718e-30 ## 4: TNBC1_AAAGATGCAGTTTACG-1         3  2.020088e-23 8.164920e-04 9.913458e-01 ## 5: TNBC1_AAAGCAACAGGAATGC-1         4  9.546322e-64 4.989037e-11 1.657378e-31 ## 6: TNBC1_AAAGCAATCGGAATCT-1         3  1.516589e-99 8.466806e-33 1.000000e+00 ##             p_4 ## 1: 1.000000e+00 ## 2: 8.821035e-66 ## 3: 1.000000e+00 ## 4: 7.837745e-03 ## 5: 1.000000e+00 ## 6: 2.457592e-29 pagoda$plotEmbedding(     alpha=0.8,     size=1,      groups = nb$clone_post %>%         {setNames(.$clone_opt, .$cell)},     plot.na = F,     plot.theme = theme_bw(),     title = 'Genotypes',     pal = mypal )"},{"path":"https://kharchenkolab.github.io/numbat/articles/results.html","id":"tumor-versus-normal-probability","dir":"Articles","previous_headings":"","what":"Tumor versus normal probability","title":"Interpreting Numbat results","text":"Combining evidence CNVs, Numbat derives aneuploidy probability cell distinguish tumor versus normal cells. can visualize posterior aneuploidy probability based expression evidence , allele evidence , jointly: expression allele signal clearly separate tumor normal cells.","code":"p_joint = pagoda$plotEmbedding(     alpha=0.8,     size=1,      colors = nb$clone_post %>%         {setNames(.$p_cnv, .$cell)},     plot.na = F,     plot.theme = theme_bw(),     title = 'Joint', ) + scale_color_gradient2(low = 'royalblue', mid = 'white', high = 'red3', midpoint = 0.5, name = 'Posterior') p_allele = pagoda$plotEmbedding(     alpha=0.8,     size=1,      colors = nb$clone_post %>%         {setNames(.$p_cnv_x, .$cell)},     plot.na = F,     plot.theme = theme_bw(),     title = 'Expression', ) + scale_color_gradient2(low = 'royalblue', mid = 'white', high = 'red3', midpoint = 0.5, name = 'Posterior') p_expr = pagoda$plotEmbedding(     alpha=0.8,     size=1,      colors = nb$clone_post %>%         {setNames(.$p_cnv_y, .$cell)},     plot.na = F,     show.legend = T,     plot.theme = theme_bw(),     title = 'Allele', ) + scale_color_gradient2(low = 'royalblue', mid = 'white', high = 'red3', midpoint = 0.5, name = 'Posterior') (p_expr | p_allele | p_joint) + plot_layout(guides = 'collect')"},{"path":"https://kharchenkolab.github.io/numbat/articles/results.html","id":"tumor-phylogeny","dir":"Articles","previous_headings":"","what":"Tumor phylogeny","title":"Interpreting Numbat results","text":"take closer look inferred single cell phylogeny mutations occurred. mutational history can also represented clone level, cells genotype aggregated one node.","code":"nb$plot_sc_tree(   label_size = 3,    branch_width = 0.5,    tip_length = 0.5,   pal_clone = mypal,    tip = TRUE ) nb$plot_mut_history(pal = mypal)"},{"path":"https://kharchenkolab.github.io/numbat/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Teng Gao. Maintainer, author. Hirak Sarkar. Author. Evan Biederstedt. Author. Peter Kharchenko. Author.","code":""},{"path":"https://kharchenkolab.github.io/numbat/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teng Gao, Ruslan Soldatov, Hirak Sarkar, Adam Kurkiewicz, Evan Biederstedt, Po-Ru Loh, Peter Kharchenko. Haplotype-enhanced inference somatic copy number profiles single-cell transcriptomes. bioRxiv 2022.","code":"@Article{,   title = {Haplotype-enhanced inference of somatic copy number profiles from single-cell transcriptomes.},   author = {Teng Gao and Ruslan Soldatov and Hirak Sarkar and Adam Kurkiewicz and Evan Biederstedt and Po-Ru Loh and Peter Kharchenko},   journal = {bioRxiv},   year = {2022},   url = {https://doi.org/10.1101/2022.02.07.479314}, }"},{"path":"https://kharchenkolab.github.io/numbat/index.html","id":"numbat","dir":"","previous_headings":"","what":"Numbat Guide","title":"Numbat Guide","text":"Numbat haplotype-enhanced CNV caller single-cell transcriptomics data. integrates signals gene expression, allelic ratio, population-derived haplotype information accurately infer allele-specific CNVs single cells reconstruct lineage relationship. Numbat can used : Detect allele-specific copy number variations scRNA-seq Differentiate tumor versus normal cells tumor microenvironment Infer clonal architecture evolutionary history profiled tumors.  Numbat require paired DNA genotype data operates solely donor scRNA-data data (example, 10x Cell Ranger output). details method, please checkout preprint: Teng Gao, Ruslan Soldatov, Hirak Sarkar, et al. Haplotype-enhanced inference somatic copy number profiles single-cell transcriptomes. bioRxiv 2022.","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Modes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the modes of a vector — Modes","title":"Get the modes of a vector — Modes","text":"Get modes vector","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Modes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the modes of a vector — Modes","text":"","code":"Modes(x)"},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":null,"dir":"Reference","previous_headings":"","what":"Numbat R6 class — Numbat","title":"Numbat R6 class — Numbat","text":"Used allow users plot results","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Numbat R6 class — Numbat","text":"label character Sample name gtf dataframe Transcript annotation joint_post dataframe Joint posterior exp_post dataframe Expression posterior allele_post dataframe Allele posetrior bulk_subtrees dataframe Bulk profiles lineage subtrees bulk_clones dataframe Bulk profiles clones segs_consensus dataframe Consensus segments tree_post list Tree posterior mut_graph igraph Mutation history graph gtree tbl_graph Single-cell phylogeny clone_post dataframe Clone posteriors gexp_roll_wide matrix Smoothed expression single cells hc hclust Initial hierarchical clustering","code":""},{"path":[]},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Numbat R6 class — Numbat","text":"Numbat$new() Numbat$plot_phylo_heatmap() Numbat$plot_exp_roll() Numbat$plot_mut_history() Numbat$plot_sc_tree() Numbat$plot_consensus() Numbat$plot_clone_profile() Numbat$clone()","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Numbat R6 class — Numbat","text":"initialize Numbat class","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Numbat R6 class — Numbat","text":"","code":"Numbat$new(out_dir, i = 2, gtf = gtf_hg38, verbose = TRUE)"},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numbat R6 class — Numbat","text":"out_dir character string Output directory integer Get results iteration (either 1 2) (default=2) gtf dataframe Transcript gtf (default=gtf_hg38) verbose logical Whether output verbose results (default=TRUE)","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Numbat R6 class — Numbat","text":"new 'Numbat' object","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"method-plot-phylo-heatmap-","dir":"Reference","previous_headings":"","what":"Method plot_phylo_heatmap()","title":"Numbat R6 class — Numbat","text":"Plot single-cell CNV calls heatmap corresponding phylogeny","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Numbat R6 class — Numbat","text":"","code":"Numbat$plot_phylo_heatmap(...)"},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numbat R6 class — Numbat","text":"... additional parameters passed plot_phylo_heatmap()","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"method-plot-exp-roll-","dir":"Reference","previous_headings":"","what":"Method plot_exp_roll()","title":"Numbat R6 class — Numbat","text":"Plot window-smoothed expression profiles","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Numbat R6 class — Numbat","text":"","code":"Numbat$plot_exp_roll(k = 3, n_sample = 300, ...)"},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numbat R6 class — Numbat","text":"k integer Number clusters n_sample integer Number cells subsample ... additional parameters passed plot_exp_roll()","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"method-plot-mut-history-","dir":"Reference","previous_headings":"","what":"Method plot_mut_history()","title":"Numbat R6 class — Numbat","text":"Plot mutation history tumor","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Numbat R6 class — Numbat","text":"","code":"Numbat$plot_mut_history(...)"},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numbat R6 class — Numbat","text":"... additional parameters passed plot_mut_history()","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"method-plot-sc-tree-","dir":"Reference","previous_headings":"","what":"Method plot_sc_tree()","title":"Numbat R6 class — Numbat","text":"Plot single cell phylogeny","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Numbat R6 class — Numbat","text":"","code":"Numbat$plot_sc_tree(...)"},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numbat R6 class — Numbat","text":"... additional parameters passed plot_sc_tree()","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"method-plot-consensus-","dir":"Reference","previous_headings":"","what":"Method plot_consensus()","title":"Numbat R6 class — Numbat","text":"Plot consensus segments","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Numbat R6 class — Numbat","text":"","code":"Numbat$plot_consensus(...)"},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numbat R6 class — Numbat","text":"... additional parameters passed plot_sc_tree()","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"method-plot-clone-profile-","dir":"Reference","previous_headings":"","what":"Method plot_clone_profile()","title":"Numbat R6 class — Numbat","text":"Plot clone cnv profiles","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Numbat R6 class — Numbat","text":"","code":"Numbat$plot_clone_profile(...)"},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numbat R6 class — Numbat","text":"... additional parameters passed plot_clone_profile()","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Numbat R6 class — Numbat","text":"objects class cloneable method.","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Numbat R6 class — Numbat","text":"","code":"Numbat$clone(deep = FALSE)"},{"path":"https://kharchenkolab.github.io/numbat/reference/Numbat.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numbat R6 class — Numbat","text":"deep Whether make deep clone.","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/aggregate_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to make reference gene expression profiles — aggregate_counts","title":"Utility function to make reference gene expression profiles — aggregate_counts","text":"Utility function make reference gene expression profiles","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/aggregate_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to make reference gene expression profiles — aggregate_counts","text":"","code":"aggregate_counts(count_mat, annot, normalized = TRUE, verbose = TRUE)"},{"path":"https://kharchenkolab.github.io/numbat/reference/aggregate_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to make reference gene expression profiles — aggregate_counts","text":"count_mat matrix/dgCMatrix Gene expression counts annot dataframe Cell annotation columns \"cell\" \"group\" normalized logical Whether return normalized expression values verbose logical Verbosity","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/aggregate_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to make reference gene expression profiles — aggregate_counts","text":"matrix Reference gene expression levels","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/analyze_bulk.html","id":null,"dir":"Reference","previous_headings":"","what":"Call CNVs in a pseudobulk profile using the Numbat joint HMM — analyze_bulk","title":"Call CNVs in a pseudobulk profile using the Numbat joint HMM — analyze_bulk","text":"Call CNVs pseudobulk profile using Numbat joint HMM","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/analyze_bulk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call CNVs in a pseudobulk profile using the Numbat joint HMM — analyze_bulk","text":"","code":"analyze_bulk(   bulk,   t = 1e-05,   gamma = 20,   theta_min = 0.08,   logphi_min = 0.25,   lambda = 1,   min_genes = 10,   exp_only = FALSE,   allele_only = FALSE,   bal_cnv = TRUE,   retest = TRUE,   find_diploid = TRUE,   diploid_chroms = NULL,   segs_loh = NULL,   classify_allele = FALSE,   run_hmm = TRUE,   prior = NULL,   exclude_neu = TRUE,   phasing = TRUE,   verbose = TRUE )"},{"path":"https://kharchenkolab.github.io/numbat/reference/analyze_bulk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call CNVs in a pseudobulk profile using the Numbat joint HMM — analyze_bulk","text":"bulk dataframe Pesudobulk profile t numeric Transition probability gamma numeric Dispersion parameter Beta-Binomial allele model theta_min numeric Minimum imbalance threshold logphi_min numeric Minimum log expression deviation threshold lambda numeric Phase switch rate min_genes integer Minimum number genes call event exp_only logical Whether run expression-HMM allele_only logical Whether run allele-HMM bal_cnv logical Whether call balanced amplifications/deletions retest whether retest CNVs Viterbi decoding find_diploid whether run diploid region identification routine diploid_chroms user-given chromsomes known diploid state","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/analyze_bulk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call CNVs in a pseudobulk profile using the Numbat joint HMM — analyze_bulk","text":"dataframe segments CNV posterior information","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_cm.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate genetic distance between markers — annot_cm","title":"Annotate genetic distance between markers — annot_cm","text":"Annotate genetic distance markers","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_cm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate genetic distance between markers — annot_cm","text":"","code":"annot_cm(bulk, genetic_map)"},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_cm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate genetic distance between markers — annot_cm","text":"bulk dataframe Pseudobulk profile genetic_map dataframe Genetic map","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_cm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate genetic distance between markers — annot_cm","text":"dataframe Annotated pseudobulk profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate a consensus segments on a pseudobulk dataframe — annot_consensus","title":"Annotate a consensus segments on a pseudobulk dataframe — annot_consensus","text":"Annotate consensus segments pseudobulk dataframe","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate a consensus segments on a pseudobulk dataframe — annot_consensus","text":"","code":"annot_consensus(bulk, segs_consensus, join_mode = \"inner\")"},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate a consensus segments on a pseudobulk dataframe — annot_consensus","text":"bulk dataframe Pseudobulk profile segs_consensus datatframe Consensus segment dataframe","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate a consensus segments on a pseudobulk dataframe — annot_consensus","text":"dataframe Pseudobulk profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_haplo_segs.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate haplotype segments after HMM decoding — annot_haplo_segs","title":"Annotate haplotype segments after HMM decoding — annot_haplo_segs","text":"Annotate haplotype segments HMM decoding","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_haplo_segs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate haplotype segments after HMM decoding — annot_haplo_segs","text":"","code":"annot_haplo_segs(bulk)"},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_segs.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate copy number segments after HMM decoding — annot_segs","title":"Annotate copy number segments after HMM decoding — annot_segs","text":"Annotate copy number segments HMM decoding","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_segs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate copy number segments after HMM decoding — annot_segs","text":"","code":"annot_segs(bulk, var = \"cnv_state\")"},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_segs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate copy number segments after HMM decoding — annot_segs","text":"bulk dataframe Pseudobulk profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_segs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate copy number segments after HMM decoding — annot_segs","text":"pseudobulk dataframe","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_superclones.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate superclones on a tree — annot_superclones","title":"Annotate superclones on a tree — annot_superclones","text":"Annotate superclones tree","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_superclones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate superclones on a tree — annot_superclones","text":"","code":"annot_superclones(gtree, geno, p_min = 0.95, precision_cutoff = 0.9)"},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_theta_roll.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate rolling estimate of imbalance level theta — annot_theta_roll","title":"Annotate rolling estimate of imbalance level theta — annot_theta_roll","text":"Annotate rolling estimate imbalance level theta","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_theta_roll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate rolling estimate of imbalance level theta — annot_theta_roll","text":"","code":"annot_theta_roll(bulk)"},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_theta_roll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate rolling estimate of imbalance level theta — annot_theta_roll","text":"bulk pseudobulk dataframe","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/annot_theta_roll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate rolling estimate of imbalance level theta — annot_theta_roll","text":"pseudobulk dataframe","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/approx_phi_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Laplace approximation of the posterior of expression fold change phi — approx_phi_post","title":"Laplace approximation of the posterior of expression fold change phi — approx_phi_post","text":"Laplace approximation posterior expression fold change phi","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/approx_phi_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Laplace approximation of the posterior of expression fold change phi — approx_phi_post","text":"","code":"approx_phi_post(   Y_obs,   lambda_ref,   d,   alpha = NULL,   beta = NULL,   mu = NULL,   sig = NULL,   lower = 0.2,   upper = 10,   start = 1 )"},{"path":"https://kharchenkolab.github.io/numbat/reference/approx_theta_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Laplace approximation of the posterior of allelic imbalance theta — approx_theta_post","title":"Laplace approximation of the posterior of allelic imbalance theta — approx_theta_post","text":"Laplace approximation posterior allelic imbalance theta","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/approx_theta_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Laplace approximation of the posterior of allelic imbalance theta — approx_theta_post","text":"","code":"approx_theta_post(   pAD,   DP,   p_s,   lower = 0.001,   upper = 0.499,   start = 0.25,   gamma = 20 )"},{"path":"https://kharchenkolab.github.io/numbat/reference/binary_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate entropy for a binary variable — binary_entropy","title":"calculate entropy for a binary variable — binary_entropy","text":"calculate entropy binary variable","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/binary_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate entropy for a binary variable — binary_entropy","text":"","code":"binary_entropy(p)"},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_allele_LLR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate LLR for an allele HMM — calc_allele_LLR","title":"Calculate LLR for an allele HMM — calc_allele_LLR","text":"Calculate LLR allele HMM","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_allele_LLR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate LLR for an allele HMM — calc_allele_LLR","text":"","code":"calc_allele_LLR(pAD, DP, p_s, theta_mle, theta_0 = 0, gamma = 20)"},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_allele_LLR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate LLR for an allele HMM — calc_allele_LLR","text":"pAD numeric vector Phased allele depth DP numeric vector Total allele depth p_s numeric vector Phase switch probabilities theta_mle numeric MLE imbalance level theta (alternative hypothesis) theta_0 numeric Imbalance level null hypothesis gamma numeric Dispersion parameter Beta-Binomial allele model","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_allele_LLR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate LLR for an allele HMM — calc_allele_LLR","text":"numeric Log-likelihood ratio","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_allele_lik.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate allele likelihoods — calc_allele_lik","title":"Calculate allele likelihoods — calc_allele_lik","text":"Calculate allele likelihoods","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_allele_lik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate allele likelihoods — calc_allele_lik","text":"","code":"calc_allele_lik(pAD, DP, p_s, theta, gamma = 20)"},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_allele_lik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate allele likelihoods — calc_allele_lik","text":"pAD integer vector Paternal allele counts DP integer vector Total alelle counts p_s numeric vector Phase switch probabilities theta numeric Haplotype imbalance gamma numeric Overdispersion allele-specific expression","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_cluster_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate expression distance matrix between cell populatoins — calc_cluster_dist","title":"Calculate expression distance matrix between cell populatoins — calc_cluster_dist","text":"Calculate expression distance matrix cell populatoins","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_cluster_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate expression distance matrix between cell populatoins — calc_cluster_dist","text":"","code":"calc_cluster_dist(count_mat, cell_annot)"},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_cluster_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate expression distance matrix between cell populatoins — calc_cluster_dist","text":"count_mat dgCMatrix Gene expression counts cell_annot dataframe specifying cell ID cluster memberships","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_cluster_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate expression distance matrix between cell populatoins — calc_cluster_dist","text":"distance matrix","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_exp_LLR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate LLR for an expression HMM — calc_exp_LLR","title":"Calculate LLR for an expression HMM — calc_exp_LLR","text":"Calculate LLR expression HMM","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_exp_LLR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate LLR for an expression HMM — calc_exp_LLR","text":"","code":"calc_exp_LLR(   Y_obs,   lambda_ref,   d,   phi_mle,   mu = NULL,   sig = NULL,   alpha = NULL,   beta = NULL )"},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_exp_LLR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate LLR for an expression HMM — calc_exp_LLR","text":"Y_obs numeric vector Gene expression counts lambda_ref numeric vector Reference expression levels d numeric vector Total library size phi_mle numeric MLE expression fold change phi (alternative hypothesis) mu numeric Mean parameter PLN expression model sig numeric Dispersion parameter PLN expression model alpha numeric Hyperparameter gamma poisson model (used) beta numeric Hyperparameter gamma poisson model (used)","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_exp_LLR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate LLR for an expression HMM — calc_exp_LLR","text":"numeric Log-likelihood ratio","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_phi_mle_lnpois.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the MLE of expression fold change phi — calc_phi_mle_lnpois","title":"Calculate the MLE of expression fold change phi — calc_phi_mle_lnpois","text":"Calculate MLE expression fold change phi","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_phi_mle_lnpois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the MLE of expression fold change phi — calc_phi_mle_lnpois","text":"","code":"calc_phi_mle_lnpois(Y_obs, lambda_ref, d, mu, sig, lower = 0.1, upper = 10)"},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_trans_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the transition matrix for joint HMM — calc_trans_mat","title":"Calculate the transition matrix for joint HMM — calc_trans_mat","text":"Calculate transition matrix joint HMM","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/calc_trans_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the transition matrix for joint HMM — calc_trans_mat","text":"","code":"calc_trans_mat(t, p_s, w, states_cn, states_phase)"},{"path":"https://kharchenkolab.github.io/numbat/reference/check_allele_df.html","id":null,"dir":"Reference","previous_headings":"","what":"check the format of a allele dataframe — check_allele_df","title":"check the format of a allele dataframe — check_allele_df","text":"check format allele dataframe","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/check_allele_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check the format of a allele dataframe — check_allele_df","text":"","code":"check_allele_df(df)"},{"path":"https://kharchenkolab.github.io/numbat/reference/check_exp_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"check the format of lambdas_ref — check_exp_ref","title":"check the format of lambdas_ref — check_exp_ref","text":"check format lambdas_ref","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/check_exp_ref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check the format of lambdas_ref — check_exp_ref","text":"","code":"check_exp_ref(lambdas_ref)"},{"path":"https://kharchenkolab.github.io/numbat/reference/check_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"check the format of a count matrix — check_matrix","title":"check the format of a count matrix — check_matrix","text":"check format count matrix","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/check_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check the format of a count matrix — check_matrix","text":"","code":"check_matrix(count_mat)"},{"path":"https://kharchenkolab.github.io/numbat/reference/choose_ref_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"choose beest reference for each cell based on correlation — choose_ref_cor","title":"choose beest reference for each cell based on correlation — choose_ref_cor","text":"choose beest reference cell based correlation","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/choose_ref_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"choose beest reference for each cell based on correlation — choose_ref_cor","text":"","code":"choose_ref_cor(count_mat, lambdas_ref, gtf)"},{"path":"https://kharchenkolab.github.io/numbat/reference/choose_ref_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"choose beest reference for each cell based on correlation — choose_ref_cor","text":"count_mat dgCMatrix Gene expression counts lambdas_ref matrix Reference expression profiles gtf dataframe Transcript gtf","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/choose_ref_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"choose beest reference for each cell based on correlation — choose_ref_cor","text":"named vector Best references cell","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/classify_alleles.html","id":null,"dir":"Reference","previous_headings":"","what":"classify alleles using viterbi and forward-backward — classify_alleles","title":"classify alleles using viterbi and forward-backward — classify_alleles","text":"classify alleles using viterbi forward-backward","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/classify_alleles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"classify alleles using viterbi and forward-backward — classify_alleles","text":"","code":"classify_alleles(bulk)"},{"path":"https://kharchenkolab.github.io/numbat/reference/classify_alleles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"classify alleles using viterbi and forward-backward — classify_alleles","text":"bulk dataframe Pesudobulk profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/classify_alleles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"classify alleles using viterbi and forward-backward — classify_alleles","text":"dataframe Pesudobulk profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/combine_bulk.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine allele and expression pseudobulks — combine_bulk","title":"Combine allele and expression pseudobulks — combine_bulk","text":"Combine allele expression pseudobulks","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/combine_bulk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine allele and expression pseudobulks — combine_bulk","text":"","code":"combine_bulk(allele_bulk, exp_bulk)"},{"path":"https://kharchenkolab.github.io/numbat/reference/combine_bulk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine allele and expression pseudobulks — combine_bulk","text":"allele_bulk dataframe Bulk allele profile genetic_map dataframe Genetic map","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/combine_bulk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine allele and expression pseudobulks — combine_bulk","text":"dataframe Pseudobulk allele expression profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/compute_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Do bayesian averaging to get posteriors — compute_posterior","title":"Do bayesian averaging to get posteriors — compute_posterior","text":"bayesian averaging get posteriors","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/compute_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do bayesian averaging to get posteriors — compute_posterior","text":"","code":"compute_posterior(PL)"},{"path":"https://kharchenkolab.github.io/numbat/reference/compute_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do bayesian averaging to get posteriors — compute_posterior","text":"PL dataframe Likelihoods priors","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/compute_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do bayesian averaging to get posteriors — compute_posterior","text":"dataframe Posteriors","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/contract_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge adjacent set of nodes — contract_nodes","title":"Merge adjacent set of nodes — contract_nodes","text":"Merge adjacent set nodes","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/contract_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge adjacent set of nodes — contract_nodes","text":"","code":"contract_nodes(G, vset, node_tar = NULL, debug = F)"},{"path":"https://kharchenkolab.github.io/numbat/reference/contract_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge adjacent set of nodes — contract_nodes","text":"G igraph Mutation graph vset vector Set adjacent vertices merge","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/contract_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge adjacent set of nodes — contract_nodes","text":"igraph Mutation graph","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/dbbinom.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta-binomial distribution density function\nA distribution is beta-binomial if p, the probability of success, \nin a binomial distribution has a beta distribution with shape \nparameters alpha > 0 and beta > 0\nFor more details, see extraDistr::dbbinom — dbbinom","title":"Beta-binomial distribution density function\nA distribution is beta-binomial if p, the probability of success, \nin a binomial distribution has a beta distribution with shape \nparameters alpha > 0 and beta > 0\nFor more details, see extraDistr::dbbinom — dbbinom","text":"Beta-binomial distribution density function distribution beta-binomial p, probability success,  binomial distribution beta distribution shape  parameters alpha > 0 beta > 0 details, see extraDistr::dbbinom","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/dbbinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta-binomial distribution density function\nA distribution is beta-binomial if p, the probability of success, \nin a binomial distribution has a beta distribution with shape \nparameters alpha > 0 and beta > 0\nFor more details, see extraDistr::dbbinom — dbbinom","text":"","code":"dbbinom(x, size, alpha = 1, beta = 1, log = FALSE)"},{"path":"https://kharchenkolab.github.io/numbat/reference/dbbinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta-binomial distribution density function\nA distribution is beta-binomial if p, the probability of success, \nin a binomial distribution has a beta distribution with shape \nparameters alpha > 0 and beta > 0\nFor more details, see extraDistr::dbbinom — dbbinom","text":"x vector quantiles size number trials (zero ) alpha numeric (default=1) beta numeric (default=1) log boolean (default=FALSE)","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/dbbinom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta-binomial distribution density function\nA distribution is beta-binomial if p, the probability of success, \nin a binomial distribution has a beta distribution with shape \nparameters alpha > 0 and beta > 0\nFor more details, see extraDistr::dbbinom — dbbinom","text":"density values returned numeric vector","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/detect_clonal_loh.html","id":null,"dir":"Reference","previous_headings":"","what":"Call clonal LOH using SNP density. \nRcommended for cell lines or tumor samples with no normal cells. — detect_clonal_loh","title":"Call clonal LOH using SNP density. \nRcommended for cell lines or tumor samples with no normal cells. — detect_clonal_loh","text":"Call clonal LOH using SNP density.  Rcommended cell lines tumor samples normal cells.","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/detect_clonal_loh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call clonal LOH using SNP density. \nRcommended for cell lines or tumor samples with no normal cells. — detect_clonal_loh","text":"","code":"detect_clonal_loh(bulk, t = 1e-05, min_depth = 0)"},{"path":"https://kharchenkolab.github.io/numbat/reference/detect_clonal_loh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call clonal LOH using SNP density. \nRcommended for cell lines or tumor samples with no normal cells. — detect_clonal_loh","text":"bulk dataframe Pseudobulk profile t numeric Transition probability min_depth integer Minimum coverage filter SNPs","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/detect_clonal_loh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call clonal LOH using SNP density. \nRcommended for cell lines or tumor samples with no normal cells. — detect_clonal_loh","text":"dataframe LOH segments","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/dpoilog.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the density for the Poisson lognormal distribution with parameters mu and sig — dpoilog","title":"Returns the density for the Poisson lognormal distribution with parameters mu and sig — dpoilog","text":"Returns density Poisson lognormal distribution parameters mu sig","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/dpoilog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the density for the Poisson lognormal distribution with parameters mu and sig — dpoilog","text":"","code":"dpoilog(x, mu, sig, log = FALSE)"},{"path":"https://kharchenkolab.github.io/numbat/reference/dpoilog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the density for the Poisson lognormal distribution with parameters mu and sig — dpoilog","text":"x vector integers, observations mu mean lognormal distribution sig standard deviation lognormal distribution log boolean Return log density TRUE (default=FALSE)","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/exp_hclust.html","id":null,"dir":"Reference","previous_headings":"","what":"Run smoothed expression-based hclust — exp_hclust","title":"Run smoothed expression-based hclust — exp_hclust","text":"Run smoothed expression-based hclust","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/exp_hclust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run smoothed expression-based hclust — exp_hclust","text":"","code":"exp_hclust(   count_mat,   lambdas_ref,   gtf,   sc_refs = NULL,   window = 101,   ncores = 1,   verbose = TRUE )"},{"path":"https://kharchenkolab.github.io/numbat/reference/exp_hclust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run smoothed expression-based hclust — exp_hclust","text":"count_mat dgCMatrix Gene counts lambdas_ref matrix Reference expression profiles gtf dataframe Transcript GTF sc_refs named list Reference choices single cells window integer Sliding window size ncores integer Number cores verbose logical Verbosity df_allele dataframe Alelle counts","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/expand_states.html","id":null,"dir":"Reference","previous_headings":"","what":"expand multi-allelic CNVs into separate entries in the single-cell posterior dataframe — expand_states","title":"expand multi-allelic CNVs into separate entries in the single-cell posterior dataframe — expand_states","text":"expand multi-allelic CNVs separate entries single-cell posterior dataframe","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/expand_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"expand multi-allelic CNVs into separate entries in the single-cell posterior dataframe — expand_states","text":"","code":"expand_states(sc_post, segs_consensus)"},{"path":"https://kharchenkolab.github.io/numbat/reference/expand_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"expand multi-allelic CNVs into separate entries in the single-cell posterior dataframe — expand_states","text":"sc_post dataframe Single-cell posteriors segs_consensus dataframe Consensus segments","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/expand_states.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"expand multi-allelic CNVs into separate entries in the single-cell posterior dataframe — expand_states","text":"dataframe Single-cell posteriors multi-allelic CNVs split different entries","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fill_neu_segs.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill neutral regions into consensus segments — fill_neu_segs","title":"Fill neutral regions into consensus segments — fill_neu_segs","text":"Fill neutral regions consensus segments","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fill_neu_segs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill neutral regions into consensus segments — fill_neu_segs","text":"","code":"fill_neu_segs(segs_consensus, segs_neu)"},{"path":"https://kharchenkolab.github.io/numbat/reference/fill_neu_segs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill neutral regions into consensus segments — fill_neu_segs","text":"segs_consensus dataframe CNV segments multiple samples segs_neu dataframe Neutral segments","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fill_neu_segs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill neutral regions into consensus segments — fill_neu_segs","text":"dataframe Collections neutral aberrant segments gaps","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/filter_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"filter for mutually expressed genes — filter_genes","title":"filter for mutually expressed genes — filter_genes","text":"filter mutually expressed genes","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/filter_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter for mutually expressed genes — filter_genes","text":"","code":"filter_genes(count_mat, lambdas_ref, gtf, verbose = FALSE)"},{"path":"https://kharchenkolab.github.io/numbat/reference/filter_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter for mutually expressed genes — filter_genes","text":"count_mat dgCMatrix Gene expression counts lambdas_ref named numeric vector reference expression profile gtf dataframe Transcript gtf","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/filter_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter for mutually expressed genes — filter_genes","text":"vector Genes kept filtering","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/find_common_diploid.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the common diploid region in a group of pseudobulks — find_common_diploid","title":"Find the common diploid region in a group of pseudobulks — find_common_diploid","text":"Find common diploid region group pseudobulks","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/find_common_diploid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the common diploid region in a group of pseudobulks — find_common_diploid","text":"","code":"find_common_diploid(   bulks,   grouping = \"clique\",   gamma = 20,   theta_min = 0.08,   t = 1e-05,   fc_min = 2^0.25,   alpha = 1e-04,   min_genes = 10,   ncores = 1,   segs_loh = NULL,   debug = FALSE,   verbose = TRUE )"},{"path":"https://kharchenkolab.github.io/numbat/reference/find_common_diploid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the common diploid region in a group of pseudobulks — find_common_diploid","text":"bulks dataframe Pseudobulk profiles (differentiated \"sample\" column) grouping logical Whether use cliques components graph find dipoid cluster gamma numeric Dispersion parameter Beta-Binomial allele model theta_min numeric Minimum imbalance threshold t numeric Transition probability fc_min numeric Minimum fold change call quadruploid cluster alpha numeric FDR cut-q values determine edges ncores integer Number cores use","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/find_common_diploid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the common diploid region in a group of pseudobulks — find_common_diploid","text":"list Ploidy information","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_bbinom.html","id":null,"dir":"Reference","previous_headings":"","what":"fit a Beta-Binomial model by maximum likelihood — fit_bbinom","title":"fit a Beta-Binomial model by maximum likelihood — fit_bbinom","text":"fit Beta-Binomial model maximum likelihood","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_bbinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit a Beta-Binomial model by maximum likelihood — fit_bbinom","text":"","code":"fit_bbinom(AD, DP)"},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_bbinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit a Beta-Binomial model by maximum likelihood — fit_bbinom","text":"AD numeric vector Variant allele depth DP numeric vector Total allele depth","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_bbinom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit a Beta-Binomial model by maximum likelihood — fit_bbinom","text":"MLE alpha beta","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"fit gamma maximum likelihood — fit_gamma","title":"fit gamma maximum likelihood — fit_gamma","text":"fit gamma maximum likelihood","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit gamma maximum likelihood — fit_gamma","text":"","code":"fit_gamma(AD, DP, start = 20)"},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit gamma maximum likelihood — fit_gamma","text":"AD numeric vector Variant allele depth DP numeric vector Total allele depth","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit gamma maximum likelihood — fit_gamma","text":"fit","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_gpois.html","id":null,"dir":"Reference","previous_headings":"","what":"fit a Gamma-Poisson model by maximum likelihood — fit_gpois","title":"fit a Gamma-Poisson model by maximum likelihood — fit_gpois","text":"fit Gamma-Poisson model maximum likelihood","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_gpois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit a Gamma-Poisson model by maximum likelihood — fit_gpois","text":"","code":"fit_gpois(Y_obs, lambda_ref, d)"},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_gpois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit a Gamma-Poisson model by maximum likelihood — fit_gpois","text":"Y_obs numeric vector Gene expression counts lambda_ref numeric vector Reference expression levels d numeric Total library size","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_gpois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit a Gamma-Poisson model by maximum likelihood — fit_gpois","text":"numeric MLE alpha beta","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_lnpois.html","id":null,"dir":"Reference","previous_headings":"","what":"fit a PLN model by maximum likelihood — fit_lnpois","title":"fit a PLN model by maximum likelihood — fit_lnpois","text":"fit PLN model maximum likelihood","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_lnpois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit a PLN model by maximum likelihood — fit_lnpois","text":"","code":"fit_lnpois(Y_obs, lambda_ref, d)"},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_lnpois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit a PLN model by maximum likelihood — fit_lnpois","text":"Y_obs numeric vector Gene expression counts lambda_ref numeric vector Reference expression levels d numeric Total library size","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_lnpois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit a PLN model by maximum likelihood — fit_lnpois","text":"numeric MLE mu sig","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_ref_sse.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a reference profile from multiple references using constrained least square — fit_ref_sse","title":"Fit a reference profile from multiple references using constrained least square — fit_ref_sse","text":"Fit reference profile multiple references using constrained least square","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_ref_sse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a reference profile from multiple references using constrained least square — fit_ref_sse","text":"","code":"fit_ref_sse(Y_obs, lambdas_ref, gtf, min_lambda = 2e-06, verbose = FALSE)"},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_ref_sse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a reference profile from multiple references using constrained least square — fit_ref_sse","text":"Y_obs vector lambdas_ref named vector gtf dataframe","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/fit_ref_sse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a reference profile from multiple references using constrained least square — fit_ref_sse","text":"fitted expression profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/forward_back_allele.html","id":null,"dir":"Reference","previous_headings":"","what":"Forward-backward algorithm for allele HMM — forward_back_allele","title":"Forward-backward algorithm for allele HMM — forward_back_allele","text":"Forward-backward algorithm allele HMM","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/forward_back_allele.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forward-backward algorithm for allele HMM — forward_back_allele","text":"","code":"forward_back_allele(hmm)"},{"path":"https://kharchenkolab.github.io/numbat/reference/genotype.html","id":null,"dir":"Reference","previous_headings":"","what":"Genotyping main function — genotype","title":"Genotyping main function — genotype","text":"Genotyping main function","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/genotype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genotyping main function — genotype","text":"","code":"genotype(label, samples, vcfs, outdir, het_only = FALSE, chr_prefix = TRUE)"},{"path":"https://kharchenkolab.github.io/numbat/reference/genotype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Genotyping main function — genotype","text":"label character Individual/sample label samples vector Sample names vcfs list vcfR VCFs cellsnp-lite pileup outdir character Output directory het_only logical Whether use heterozygous SNPs chr_prefix logical Whether add chr prefix","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/genotype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Genotyping main function — genotype","text":"integer Status code","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_allele_bulk.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate into pseudobulk alelle profile — get_allele_bulk","title":"Aggregate into pseudobulk alelle profile — get_allele_bulk","text":"Aggregate pseudobulk alelle profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_allele_bulk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate into pseudobulk alelle profile — get_allele_bulk","text":"","code":"get_allele_bulk(df_allele, genetic_map, lambda = 1, min_depth = 0)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_allele_bulk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate into pseudobulk alelle profile — get_allele_bulk","text":"df_allele dataframe Single-cell allele counts genetic_map dataframe Genetic map lambda numeric Phase switch rate min_depth integer Minimum coverage filter SNPs","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_allele_bulk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate into pseudobulk alelle profile — get_allele_bulk","text":"dataframe Pseudobulk allele profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_allele_hmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an allele HMM — get_allele_hmm","title":"Get an allele HMM — get_allele_hmm","text":"Get allele HMM","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_allele_hmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an allele HMM — get_allele_hmm","text":"","code":"get_allele_hmm(pAD, DP, p_s, theta, gamma = 20)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_allele_hmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an allele HMM — get_allele_hmm","text":"pAD integer vector Paternal allele counts DP integer vector Total alelle counts p_s numeric vector Phase switch probabilities theta numeric Haplotype imbalance gamma numeric Overdispersion allele-specific expression","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_allele_hmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an allele HMM — get_allele_hmm","text":"HMM object","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_allele_post.html","id":null,"dir":"Reference","previous_headings":"","what":"get CNV allele posteriors — get_allele_post","title":"get CNV allele posteriors — get_allele_post","text":"get CNV allele posteriors","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_allele_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get CNV allele posteriors — get_allele_post","text":"","code":"get_allele_post(df_allele, haplotypes, segs_consensus)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_allele_post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get CNV allele posteriors — get_allele_post","text":"df_allele dataframe Allele counts haplotypes dataframe Haplotype classification segs_consensus dataframe Consensus CNV segments","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_allele_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get CNV allele posteriors — get_allele_post","text":"dataframe Allele posteriors","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_bulk.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate single-cell data into combined bulk expression and allele profile — get_bulk","title":"Aggregate single-cell data into combined bulk expression and allele profile — get_bulk","text":"Aggregate single-cell data combined bulk expression allele profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_bulk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate single-cell data into combined bulk expression and allele profile — get_bulk","text":"","code":"get_bulk(   count_mat,   lambdas_ref,   df_allele,   gtf,   genetic_map,   min_depth = 0,   lambda = 1,   verbose = TRUE )"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_bulk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate single-cell data into combined bulk expression and allele profile — get_bulk","text":"count_mat dgCMatrix Gene expression counts lambdas_ref matrix Reference expression profiles df_allele dataframe Single-cell allele counts gtf dataframe Transcript gtf genetic_map dataframe Genetic map","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_bulk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate single-cell data into combined bulk expression and allele profile — get_bulk","text":"dataframe Pseudobulk gene expression allele profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_clone_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Map cells to the phylogeny (or genotypes) based on CNV posteriors — get_clone_post","title":"Map cells to the phylogeny (or genotypes) based on CNV posteriors — get_clone_post","text":"Map cells phylogeny (genotypes) based CNV posteriors","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_clone_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map cells to the phylogeny (or genotypes) based on CNV posteriors — get_clone_post","text":"","code":"get_clone_post(gtree, exp_post, allele_post)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_clone_post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map cells to the phylogeny (or genotypes) based on CNV posteriors — get_clone_post","text":"gtree tbl_graph cell lineage tree exp_post dataframe Expression posteriors allele_post dataframe Allele posteriors","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_clone_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map cells to the phylogeny (or genotypes) based on CNV posteriors — get_clone_post","text":"dataframe Clone posteriors","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_exp_bulk.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate into bulk expression profile — get_exp_bulk","title":"Aggregate into bulk expression profile — get_exp_bulk","text":"Aggregate bulk expression profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_exp_bulk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate into bulk expression profile — get_exp_bulk","text":"","code":"get_exp_bulk(count_mat, lambdas_ref, gtf, verbose = FALSE)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_exp_bulk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate into bulk expression profile — get_exp_bulk","text":"count_mat dgCMatrix Gene expression counts lambdas_ref matrix Reference expression profiles gtf dataframe Transcript gtf","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_exp_bulk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate into bulk expression profile — get_exp_bulk","text":"dataframe Pseudobulk gene expression profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_exp_likelihoods.html","id":null,"dir":"Reference","previous_headings":"","what":"get the single cell expression likelihoods — get_exp_likelihoods","title":"get the single cell expression likelihoods — get_exp_likelihoods","text":"get single cell expression likelihoods","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_exp_likelihoods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the single cell expression likelihoods — get_exp_likelihoods","text":"","code":"get_exp_likelihoods(   exp_counts,   diploid_chroms = NULL,   use_loh = FALSE,   depth_obs = NULL,   mu = NULL,   sigma = NULL )"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_exp_likelihoods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the single cell expression likelihoods — get_exp_likelihoods","text":"exp_counts dataframe Single-cell expression counts CHROM, seg, cnv_state, gene, Y_obs, lambda_ref diploid_chroms character vector Known diploid chromosomes use_loh logical Whether include CNLOH regions baseline","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_exp_likelihoods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the single cell expression likelihoods — get_exp_likelihoods","text":"dataframe Single-cell CNV likelihood scores","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_exp_post.html","id":null,"dir":"Reference","previous_headings":"","what":"compute single-cell expression posteriors — get_exp_post","title":"compute single-cell expression posteriors — get_exp_post","text":"compute single-cell expression posteriors","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_exp_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute single-cell expression posteriors — get_exp_post","text":"","code":"get_exp_post(   segs_consensus,   count_mat,   gtf,   lambdas_ref,   sc_refs = NULL,   diploid_chroms = NULL,   use_loh = NULL,   segs_loh = NULL,   ncores = 30,   verbose = TRUE,   debug = F )"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_exp_post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute single-cell expression posteriors — get_exp_post","text":"segs_consensus dataframe Consensus segments count_mat dgCMatrix gene expression count matrix gtf dataframe transcript gtf lambdas_ref matrix Reference expression profiles","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_exp_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute single-cell expression posteriors — get_exp_post","text":"dataframe Expression posteriors","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_exp_sc.html","id":null,"dir":"Reference","previous_headings":"","what":"get the single cell expression dataframe — get_exp_sc","title":"get the single cell expression dataframe — get_exp_sc","text":"get single cell expression dataframe","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_exp_sc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the single cell expression dataframe — get_exp_sc","text":"","code":"get_exp_sc(segs_consensus, count_mat, gtf, segs_loh = NULL)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_exp_sc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the single cell expression dataframe — get_exp_sc","text":"segs_consensus dataframe Consensus segments count_mat dgCMatrix gene expression count matrix gtf dataframe Transcript gtf","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_exp_sc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the single cell expression dataframe — get_exp_sc","text":"dataframe single cell expression counts annotated segments","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_haplotype_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Get phased haplotypes — get_haplotype_post","title":"Get phased haplotypes — get_haplotype_post","text":"Get phased haplotypes","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_haplotype_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get phased haplotypes — get_haplotype_post","text":"","code":"get_haplotype_post(bulks, segs_consensus, naive = FALSE)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_haplotype_post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get phased haplotypes — get_haplotype_post","text":"bulks dataframe Subtree pseudobulk profiles segs_consensus dataframe Consensus CNV segments naive logical Whether use naive haplotype classification","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_haplotype_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get phased haplotypes — get_haplotype_post","text":"dataframe Posterior haplotypes","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_internal_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get the internal nodes of a dendrogram and the leafs in each subtree — get_internal_nodes","title":"Helper function to get the internal nodes of a dendrogram and the leafs in each subtree — get_internal_nodes","text":"Helper function get internal nodes dendrogram leafs subtree","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_internal_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get the internal nodes of a dendrogram and the leafs in each subtree — get_internal_nodes","text":"","code":"get_internal_nodes(den, node, labels)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_joint_post.html","id":null,"dir":"Reference","previous_headings":"","what":"get joint posteriors — get_joint_post","title":"get joint posteriors — get_joint_post","text":"get joint posteriors","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_joint_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get joint posteriors — get_joint_post","text":"","code":"get_joint_post(exp_post, allele_post, segs_consensus)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_joint_post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get joint posteriors — get_joint_post","text":"exp_post dataframe Expression single-cell CNV posteriors allele_post dataframe Allele single-cell CNV posteriors segs_consensus dataframe Consensus CNV segments","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_joint_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get joint posteriors — get_joint_post","text":"dataframe Joint single-cell CNV posteriors","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_lambdas_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Get average reference expressio profile based on single-cell ref choices — get_lambdas_bar","title":"Get average reference expressio profile based on single-cell ref choices — get_lambdas_bar","text":"Get average reference expressio profile based single-cell ref choices","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_lambdas_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get average reference expressio profile based on single-cell ref choices — get_lambdas_bar","text":"","code":"get_lambdas_bar(lambdas_ref, sc_refs, verbose = TRUE)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_move_cost.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the cost of a mutation reassignment — get_move_cost","title":"Get the cost of a mutation reassignment — get_move_cost","text":"Get cost mutation reassignment","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_move_cost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the cost of a mutation reassignment — get_move_cost","text":"","code":"get_move_cost(muts, node_ori, node_tar, l_matrix)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_move_cost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the cost of a mutation reassignment — get_move_cost","text":"muts character Mutations dlimited comma node_ori character Name \"\" node node_tar character Name \"\" node","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_move_cost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the cost of a mutation reassignment — get_move_cost","text":"numeric Likelihood cost mutation reassignment","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_move_opt.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the least costly mutation reassignment — get_move_opt","title":"Get the least costly mutation reassignment — get_move_opt","text":"Get least costly mutation reassignment","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_move_opt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the least costly mutation reassignment — get_move_opt","text":"","code":"get_move_opt(G, l_matrix)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_move_opt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the least costly mutation reassignment — get_move_opt","text":"G igraph Mutation graph l_matrix matrix Likelihood matrix mutation placements","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_move_opt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the least costly mutation reassignment — get_move_opt","text":"numeric Lieklihood cost performing mutation move","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_mut_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a single-cell phylogeny with mutation placements into a mutation graph — get_mut_tree","title":"Convert a single-cell phylogeny with mutation placements into a mutation graph — get_mut_tree","text":"Convert single-cell phylogeny mutation placements mutation graph","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_mut_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a single-cell phylogeny with mutation placements into a mutation graph — get_mut_tree","text":"","code":"get_mut_tree(gtree, mut_nodes)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_mut_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a single-cell phylogeny with mutation placements into a mutation graph — get_mut_tree","text":"gtree tbl_graph single-cell phylogeny mut_nodes dataframe Mutation placements","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_mut_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a single-cell phylogeny with mutation placements into a mutation graph — get_mut_tree","text":"igraph Mutation graph","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_nodes_celltree.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the internal nodes of a dendrogram and the leafs in each subtree — get_nodes_celltree","title":"Get the internal nodes of a dendrogram and the leafs in each subtree — get_nodes_celltree","text":"Get internal nodes dendrogram leafs subtree","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_nodes_celltree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the internal nodes of a dendrogram and the leafs in each subtree — get_nodes_celltree","text":"","code":"get_nodes_celltree(hc, clusters)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_nodes_celltree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the internal nodes of a dendrogram and the leafs in each subtree — get_nodes_celltree","text":"hc hclust Clustering results clusters named vector Cutree output specifying terminal clusters","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_nodes_celltree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the internal nodes of a dendrogram and the leafs in each subtree — get_nodes_celltree","text":"list Interal node subtrees leaf memberships","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_segs_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract consensus CNV segments — get_segs_consensus","title":"Extract consensus CNV segments — get_segs_consensus","text":"Extract consensus CNV segments","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_segs_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract consensus CNV segments — get_segs_consensus","text":"","code":"get_segs_consensus(bulks, min_LLR = 5, min_overlap = 0.45, retest = FALSE)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_segs_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract consensus CNV segments — get_segs_consensus","text":"bulks dataframe Pseudobulks min_LLR numeric LLR threshold filter CNVs min_overlap numeric Minimum overlap fraction determine count two events overlapping","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_segs_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract consensus CNV segments — get_segs_consensus","text":"dataframe Consensus segments","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_segs_neu.html","id":null,"dir":"Reference","previous_headings":"","what":"get neutral segments from multiple pseudobulks — get_segs_neu","title":"get neutral segments from multiple pseudobulks — get_segs_neu","text":"get neutral segments multiple pseudobulks","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_segs_neu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get neutral segments from multiple pseudobulks — get_segs_neu","text":"","code":"get_segs_neu(bulks)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_snps.html","id":null,"dir":"Reference","previous_headings":"","what":"process VCFs into SNP dataframe — get_snps","title":"process VCFs into SNP dataframe — get_snps","text":"process VCFs SNP dataframe","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_snps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"process VCFs into SNP dataframe — get_snps","text":"","code":"get_snps(vcf)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_snps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"process VCFs into SNP dataframe — get_snps","text":"vcf vcfR object","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_snps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"process VCFs into SNP dataframe — get_snps","text":"dataframe SNP information","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_trans_probs.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to calculate transition porbabilities — get_trans_probs","title":"Helper function to calculate transition porbabilities — get_trans_probs","text":"Helper function calculate transition porbabilities","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_trans_probs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to calculate transition porbabilities — get_trans_probs","text":"","code":"get_trans_probs(t, p_s, w, cn_from, phase_from, cn_to, phase_to)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_tree_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Find maximum lilkelihood assignment of mutations on a tree — get_tree_post","title":"Find maximum lilkelihood assignment of mutations on a tree — get_tree_post","text":"Find maximum lilkelihood assignment mutations tree","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_tree_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find maximum lilkelihood assignment of mutations on a tree — get_tree_post","text":"","code":"get_tree_post(tree, P)"},{"path":"https://kharchenkolab.github.io/numbat/reference/get_tree_post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find maximum lilkelihood assignment of mutations on a tree — get_tree_post","text":"tree phylo Single-cell phylogenetic tree P matrix Genotype probability matrix","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/get_tree_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find maximum lilkelihood assignment of mutations on a tree — get_tree_post","text":"list Mutation","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/l_bbinom.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate joint likelihood of allele data — l_bbinom","title":"calculate joint likelihood of allele data — l_bbinom","text":"calculate joint likelihood allele data","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/l_bbinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate joint likelihood of allele data — l_bbinom","text":"","code":"l_bbinom(AD, DP, alpha, beta)"},{"path":"https://kharchenkolab.github.io/numbat/reference/l_bbinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate joint likelihood of allele data — l_bbinom","text":"AD numeric vector Variant allele depth DP numeric vector Total allele depth alpha numeric Alpha parameter Beta-Binomial distribution beta numeric Beta parameter Beta-Binomial distribution","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/l_bbinom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate joint likelihood of allele data — l_bbinom","text":"numeric Joint log likelihood","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/l_gpois.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate joint likelihood of a gamma-poisson model — l_gpois","title":"calculate joint likelihood of a gamma-poisson model — l_gpois","text":"calculate joint likelihood gamma-poisson model","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/l_gpois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate joint likelihood of a gamma-poisson model — l_gpois","text":"","code":"l_gpois(Y_obs, lambda_ref, d, alpha, beta, phi = 1)"},{"path":"https://kharchenkolab.github.io/numbat/reference/l_gpois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate joint likelihood of a gamma-poisson model — l_gpois","text":"Y_obs numeric vector Gene expression counts lambda_ref numeric vector Reference expression levels d numeric Total library size alpha numeric Alpha parameter Gamma-Poisson distribution beta numeric Beta parameter Gamma-Poisson distribution","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/l_gpois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate joint likelihood of a gamma-poisson model — l_gpois","text":"numeric Joint log likelihood","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/l_lnpois.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate joint likelihood of a PLN model — l_lnpois","title":"calculate joint likelihood of a PLN model — l_lnpois","text":"calculate joint likelihood PLN model","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/l_lnpois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate joint likelihood of a PLN model — l_lnpois","text":"","code":"l_lnpois(Y_obs, lambda_ref, d, mu, sig, phi = 1)"},{"path":"https://kharchenkolab.github.io/numbat/reference/l_lnpois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate joint likelihood of a PLN model — l_lnpois","text":"Y_obs numeric vector Gene expression counts lambda_ref numeric vector Reference expression levels d numeric Total library size","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/l_lnpois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate joint likelihood of a PLN model — l_lnpois","text":"numeric Joint log likelihood","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/l_s_v.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute site branch likelihood (not used) — l_s_v","title":"Compute site branch likelihood (not used) — l_s_v","text":"Compute site branch likelihood (used)","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/l_s_v.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute site branch likelihood (not used) — l_s_v","text":"","code":"l_s_v(node, site, gtree, geno)"},{"path":"https://kharchenkolab.github.io/numbat/reference/l_s_v.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute site branch likelihood (not used) — l_s_v","text":"node integer Node id site character Mutation site name gtree tbl_graph single-cell phylogeny geno matrix Genotype probability matrix","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/l_s_v.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute site branch likelihood (not used) — l_s_v","text":"numeric Likelihood assigning mutation node","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/label_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate the direct upstream or downstream mutations on the edges — label_edges","title":"Annotate the direct upstream or downstream mutations on the edges — label_edges","text":"Annotate direct upstream downstream mutations edges","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/label_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate the direct upstream or downstream mutations on the edges — label_edges","text":"","code":"label_edges(G)"},{"path":"https://kharchenkolab.github.io/numbat/reference/label_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate the direct upstream or downstream mutations on the edges — label_edges","text":"G igraph Mutation graph","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/label_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate the direct upstream or downstream mutations on the edges — label_edges","text":"igraph Mutation graph","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/label_genotype.html","id":null,"dir":"Reference","previous_headings":"","what":"Label the genotypes on a mutation graph — label_genotype","title":"Label the genotypes on a mutation graph — label_genotype","text":"Label genotypes mutation graph","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/label_genotype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label the genotypes on a mutation graph — label_genotype","text":"","code":"label_genotype(G)"},{"path":"https://kharchenkolab.github.io/numbat/reference/label_genotype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label the genotypes on a mutation graph — label_genotype","text":"G igraph Mutation graph","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/label_genotype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label the genotypes on a mutation graph — label_genotype","text":"igraph Mutation graph","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/ladderize.html","id":null,"dir":"Reference","previous_headings":"","what":"from ape — ladderize","title":"from ape — ladderize","text":"ape","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/ladderize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"from ape — ladderize","text":"","code":"ladderize(phy, right = TRUE)"},{"path":"https://kharchenkolab.github.io/numbat/reference/likelihood_joint.html","id":null,"dir":"Reference","previous_headings":"","what":"Forward-backward algorithm for joint HMM — likelihood_joint","title":"Forward-backward algorithm for joint HMM — likelihood_joint","text":"Forward-backward algorithm joint HMM","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/likelihood_joint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forward-backward algorithm for joint HMM — likelihood_joint","text":"","code":"likelihood_joint(hmm)"},{"path":"https://kharchenkolab.github.io/numbat/reference/make_group_bulks.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a group of pseudobulks — make_group_bulks","title":"Make a group of pseudobulks — make_group_bulks","text":"Make group pseudobulks","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/make_group_bulks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a group of pseudobulks — make_group_bulks","text":"","code":"make_group_bulks(   groups,   count_mat,   df_allele,   lambdas_ref,   gtf,   genetic_map,   min_depth = 0,   ncores = NULL )"},{"path":"https://kharchenkolab.github.io/numbat/reference/make_group_bulks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a group of pseudobulks — make_group_bulks","text":"groups list Contains fields named \"sample\", \"cells\", \"size\", \"members\" count_mat dgCMatrix Gene counts df_allele dataframe Alelle counts lambdas_ref matrix Reference expression profiles gtf dataframe Transcript GTF genetic_map dataframe Genetic map min_depth integer Minimum allele depth include ncores integer Number cores","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/make_group_bulks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a group of pseudobulks — make_group_bulks","text":"dataframe Pseudobulk profiles","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/mark_tumor_lineage.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark the tumor lineage of a phylogeny — mark_tumor_lineage","title":"Mark the tumor lineage of a phylogeny — mark_tumor_lineage","text":"Mark tumor lineage phylogeny","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/mark_tumor_lineage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark the tumor lineage of a phylogeny — mark_tumor_lineage","text":"","code":"mark_tumor_lineage(gtree)"},{"path":"https://kharchenkolab.github.io/numbat/reference/mark_tumor_lineage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark the tumor lineage of a phylogeny — mark_tumor_lineage","text":"gtree tbl_graph Single-cell phylogeny","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/mark_tumor_lineage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark the tumor lineage of a phylogeny — mark_tumor_lineage","text":"tbl_graph Phylogeny annotated tumor versus normal compartment","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/mut_to_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"transfer mutation assignment onto a single-cell phylogeny — mut_to_tree","title":"transfer mutation assignment onto a single-cell phylogeny — mut_to_tree","text":"transfer mutation assignment onto single-cell phylogeny","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/mut_to_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"transfer mutation assignment onto a single-cell phylogeny — mut_to_tree","text":"","code":"mut_to_tree(gtree, mut_nodes)"},{"path":"https://kharchenkolab.github.io/numbat/reference/mut_to_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"transfer mutation assignment onto a single-cell phylogeny — mut_to_tree","text":"gtree tbl_graph single-cell phylogeny mut_nodes dataframe Mutation placements","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/mut_to_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"transfer mutation assignment onto a single-cell phylogeny — mut_to_tree","text":"tbl_graph single-cell phylogeny mutation placements","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/nni.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate tree neighbourhood — nni","title":"Generate tree neighbourhood — nni","text":"Generate tree neighbourhood","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/nni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate tree neighbourhood — nni","text":"","code":"nni(tree, ncores = 1)"},{"path":"https://kharchenkolab.github.io/numbat/reference/nni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate tree neighbourhood — nni","text":"tree phylo Single-cell phylogenetic tree ncores integer Number cores use","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/nnin.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform the NNI at a specific branch — nnin","title":"Perform the NNI at a specific branch — nnin","text":"Perform NNI specific branch","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/nnin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform the NNI at a specific branch — nnin","text":"","code":"nnin(tree, n)"},{"path":"https://kharchenkolab.github.io/numbat/reference/nnin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform the NNI at a specific branch — nnin","text":"tree phylo Single-cell phylogenetic tree n integer Branch ID","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/perform_nni.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum likelihood tree search via NNI — perform_nni","title":"Maximum likelihood tree search via NNI — perform_nni","text":"Maximum likelihood tree search via NNI","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/perform_nni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum likelihood tree search via NNI — perform_nni","text":"","code":"perform_nni(   tree_init,   P,   max_iter = 100,   eps = 0.01,   ncores = 1,   verbose = TRUE )"},{"path":"https://kharchenkolab.github.io/numbat/reference/perform_nni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum likelihood tree search via NNI — perform_nni","text":"tree_init phylo Intial tree P matrix Genotype probability matrix max_iter integer Maximum number iterations eps numeric Tolerance threshold likelihood difference stopping ncores integer Number cores use verbose logical Verbosity","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/perform_nni.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum likelihood tree search via NNI — perform_nni","text":"multiPhylo List trees corresponding rearrangement steps","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/phi_hat_roll.html","id":null,"dir":"Reference","previous_headings":"","what":"Rolling estimate of expression fold change phi — phi_hat_roll","title":"Rolling estimate of expression fold change phi — phi_hat_roll","text":"Rolling estimate expression fold change phi","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/phi_hat_roll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rolling estimate of expression fold change phi — phi_hat_roll","text":"","code":"phi_hat_roll(Y_obs, lambda_ref, d_obs, mu, sig, h)"},{"path":"https://kharchenkolab.github.io/numbat/reference/phi_hat_seg.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate of expression fold change phi in a segment — phi_hat_seg","title":"Estimate of expression fold change phi in a segment — phi_hat_seg","text":"Estimate expression fold change phi segment","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/phi_hat_seg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate of expression fold change phi in a segment — phi_hat_seg","text":"","code":"phi_hat_seg(Y_obs, lambda_ref, d, mu, sig)"},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_bulks.html","id":null,"dir":"Reference","previous_headings":"","what":"plot a group of pseudobulks HMM profile — plot_bulks","title":"plot a group of pseudobulks HMM profile — plot_bulks","text":"plot group pseudobulks HMM profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_bulks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot a group of pseudobulks HMM profile — plot_bulks","text":"","code":"plot_bulks(bulks, ..., ncol = 1, title = TRUE)"},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_bulks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot a group of pseudobulks HMM profile — plot_bulks","text":"bulks dataframe Pseudobulk profiles annotated \"sample\" column ... additional parameters passed plot_psbulk() ncol integer Number columns title logical Whether add titles individual plots","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_bulks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot a group of pseudobulks HMM profile — plot_bulks","text":"ggplot object","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"plot consensus CNVs — plot_consensus","title":"plot consensus CNVs — plot_consensus","text":"plot consensus CNVs","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot consensus CNVs — plot_consensus","text":"","code":"plot_consensus(segs)"},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot consensus CNVs — plot_consensus","text":"segs dataframe Consensus segments","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot consensus CNVs — plot_consensus","text":"ggplot object","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_exp_roll.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot single-cell smoothed expression magnitude heatmap — plot_exp_roll","title":"Plot single-cell smoothed expression magnitude heatmap — plot_exp_roll","text":"Plot single-cell smoothed expression magnitude heatmap","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_exp_roll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot single-cell smoothed expression magnitude heatmap — plot_exp_roll","text":"","code":"plot_exp_roll(   gexp_roll_wide,   hc,   k,   gtf,   lim = 0.8,   n_sample = 300,   reverse = TRUE,   plot_tree = TRUE )"},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_exp_roll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot single-cell smoothed expression magnitude heatmap — plot_exp_roll","text":"gexp_roll_wide matrix Cell x gene smoothed expression magnitudes hc hclust Hierarchical clustring result k integer Number clusters gtf dataframe Transcript GTF lim numeric Limit expression magnitudes n_sample integer Number cells subsample reverse logical Whether reverse cell order plot_tree logical Whether plot dendrogram","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_mut_history.html","id":null,"dir":"Reference","previous_headings":"","what":"plot mutational history — plot_mut_history","title":"plot mutational history — plot_mut_history","text":"plot mutational history","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_mut_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot mutational history — plot_mut_history","text":"","code":"plot_mut_history(   G,   clone_post = NULL,   edge_label_size = 4,   node_label_size = 6,   node_size = 10,   arrow_size = 2,   show_clone_size = TRUE,   show_distance = TRUE,   legend = TRUE,   edge_label = TRUE,   node_label = TRUE,   horizontal = TRUE,   pal = NULL )"},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_mut_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot mutational history — plot_mut_history","text":"G igraph Mutation history graph clone_post dataframe Clone assignment posteriors edge_label_size numeric Size edge label node_label_size numeric Size node label node_size numeric Size nodes arrow_size numeric Size arrows show_clone_size logical Whether show clone size show_distance logical Whether show evolutionary distance clones edge_label logical Whether label edges node_label logical Whether label nodes horizontal logical Whether use horizontal layout pal named vector Node colors","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_mut_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot mutational history — plot_mut_history","text":"ggplot object","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_phylo_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"plot single-cell CNV calls along with the clonal phylogeny — plot_phylo_heatmap","title":"plot single-cell CNV calls along with the clonal phylogeny — plot_phylo_heatmap","text":"plot single-cell CNV calls along clonal phylogeny","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_phylo_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot single-cell CNV calls along with the clonal phylogeny — plot_phylo_heatmap","text":"","code":"plot_phylo_heatmap(   gtree,   joint_post,   segs_consensus,   annot = NULL,   pal_annot = NULL,   annot_title = \"Annotation\",   annot_scale = NULL,   clone_dict = NULL,   clone_bar = FALSE,   pal_clone = NULL,   clone_title = \"Genotype\",   clone_legend = TRUE,   p_min = 0.9,   line_width = 0.1,   tree_height = 1,   branch_width = 0.2,   tip_length = 0.2,   clone_line = FALSE,   superclone = FALSE,   exclude_gap = FALSE,   root_edge = TRUE,   snvs = NULL )"},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_phylo_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot single-cell CNV calls along with the clonal phylogeny — plot_phylo_heatmap","text":"gtree tbl_graph single-cell phylogeny joint_post dataframe Joint single cell CNV posteriors segs_consensus datatframe Consensus segment dataframe annot named vector Cell annotations, keys cell names pal_annot named vector Colors cell annotations annot_title character Legend title annotation bar annot_scale ggplot scale Color scale annotation bar clone_dict named vector Clone annotations, mapping cell name clones clone_bar logical Whether display clone bar plot clone_title character Legend title clone bar clone_legend logical Whether display clone legend p_min numeric Probability threshold display CNV calls line_width numeric Line width CNV heatmap tree_height numeric Relative height phylogeny plot branch_width numeric Line width phylogeny tip_length numeric Length tips phylogeny clone_line logical Whether display borders clones heatmap superclone logical Wehether display superclones clone bar","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_phylo_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot single-cell CNV calls along with the clonal phylogeny — plot_phylo_heatmap","text":"ggplot panel","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_psbulk.html","id":null,"dir":"Reference","previous_headings":"","what":"plot a pseudobulk HMM profile — plot_psbulk","title":"plot a pseudobulk HMM profile — plot_psbulk","text":"plot pseudobulk HMM profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_psbulk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot a pseudobulk HMM profile — plot_psbulk","text":"","code":"plot_psbulk(   bulk,   use_pos = TRUE,   allele_only = FALSE,   min_LLR = 5,   min_depth = 8,   exp_limit = 2,   phi_mle = TRUE,   theta_roll = FALSE,   dot_size = 0.8,   dot_alpha = 0.5,   legend = FALSE,   exclude_gap = TRUE )"},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_psbulk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot a pseudobulk HMM profile — plot_psbulk","text":"bulk dataframe Pseudobulk profile use_pos logical Use marker position instead index x coordinate allele_only logical plot alleles min_LLR numeric LLR threshold event filtering min_depth numeric Minimum coverage depth SNP plotted exp_limit numeric Expression logFC axis limit phi_mle logical Whether plot estimates segmental expression fold change theta_roll logical Whether plot rolling estimates allele imbalance dot_size numeric Size marker dots dot_alpha numeric Transparency marker dots legend logical Whether show legend","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_psbulk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot a pseudobulk HMM profile — plot_psbulk","text":"ggplot Plot pseudobulk HMM profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_sc_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot single-cell smoothed expression magnitude heatmap — plot_sc_tree","title":"Plot single-cell smoothed expression magnitude heatmap — plot_sc_tree","text":"Plot single-cell smoothed expression magnitude heatmap","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_sc_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot single-cell smoothed expression magnitude heatmap — plot_sc_tree","text":"","code":"plot_sc_tree(   gtree,   label_mut = TRUE,   label_size = 3,   dot_size = 2,   branch_width = 0.5,   tip = TRUE,   tip_length = 0.5,   pal_clone = NULL )"},{"path":"https://kharchenkolab.github.io/numbat/reference/plot_sc_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot single-cell smoothed expression magnitude heatmap — plot_sc_tree","text":"gtree tbl_graph single-cell phylogeny label_mut logical Whether label mutations label_size numeric Size mutation labels dot_size numeric Size mutation nodes branch_width numeric Width branches tree tip logical Whether plot tip point tip_length numeric Length tips pal_clone named vector Clone colors","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/pnorm.range.log.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the total probability from a region of a normal pdf — pnorm.range.log","title":"Get the total probability from a region of a normal pdf — pnorm.range.log","text":"Get total probability region normal pdf","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/pnorm.range.log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the total probability from a region of a normal pdf — pnorm.range.log","text":"","code":"pnorm.range.log(lower, upper, mu, sd)"},{"path":"https://kharchenkolab.github.io/numbat/reference/preprocess_allele.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess allele data — preprocess_allele","title":"Preprocess allele data — preprocess_allele","text":"Preprocess allele data","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/preprocess_allele.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess allele data — preprocess_allele","text":"","code":"preprocess_allele(sample, vcf_pu, vcf_phased, AD, DP, barcodes, gtf_transcript)"},{"path":"https://kharchenkolab.github.io/numbat/reference/preprocess_allele.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess allele data — preprocess_allele","text":"sample character Sample label vcf_pu dataframe Pileup VCF cell-snp-lite vcf_phased dataframe Phased VCF eagle2 AD dgTMatrix Alt allele depth matrix pileup DP dgTMatrix Total allele depth matrix pileup barcodes vector List barcodes pileup gtf_transcript dataframe Transcript GTF","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/preprocess_allele.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess allele data — preprocess_allele","text":"dataframe Allele counts cell","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/resolve_cnvs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get unique CNVs from set of segments — resolve_cnvs","title":"Get unique CNVs from set of segments — resolve_cnvs","text":"Get unique CNVs set segments","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/resolve_cnvs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get unique CNVs from set of segments — resolve_cnvs","text":"","code":"resolve_cnvs(segs_all, min_overlap = 0.5, debug = FALSE)"},{"path":"https://kharchenkolab.github.io/numbat/reference/resolve_cnvs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get unique CNVs from set of segments — resolve_cnvs","text":"segs_all dataframe CNV segments multiple samples min_overlap numeric scalar Minimum overlap fraction determine count two events overlapping","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/resolve_cnvs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get unique CNVs from set of segments — resolve_cnvs","text":"dataframe Consensus CNV segments","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/retest_bulks.html","id":null,"dir":"Reference","previous_headings":"","what":"retest consensus segments on pseudobulks — retest_bulks","title":"retest consensus segments on pseudobulks — retest_bulks","text":"retest consensus segments pseudobulks","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/retest_bulks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"retest consensus segments on pseudobulks — retest_bulks","text":"","code":"retest_bulks(   bulks,   segs_consensus = NULL,   t = 1e-05,   min_genes = 10,   gamma = 20,   segs_loh = NULL,   use_loh = FALSE,   diploid_chroms = NULL,   ncores = 1,   exclude_neu = TRUE,   min_LLR = 5 )"},{"path":"https://kharchenkolab.github.io/numbat/reference/retest_bulks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"retest consensus segments on pseudobulks — retest_bulks","text":"bulks dataframe Pseudobulk profiles segs_consensus dataframe Consensus segments use_loh logical Whether use loh baseline diploid_chroms vector User-provided diploid chromosomes","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/retest_bulks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"retest consensus segments on pseudobulks — retest_bulks","text":"dataframe Retested pseudobulks","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/retest_cnv.html","id":null,"dir":"Reference","previous_headings":"","what":"retest CNVs in a pseudobulk — retest_cnv","title":"retest CNVs in a pseudobulk — retest_cnv","text":"retest CNVs pseudobulk","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/retest_cnv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"retest CNVs in a pseudobulk — retest_cnv","text":"","code":"retest_cnv(   bulk,   theta_min = 0.08,   logphi_min = 0.25,   gamma = 20,   allele_only = FALSE,   exclude_neu = TRUE )"},{"path":"https://kharchenkolab.github.io/numbat/reference/retest_cnv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"retest CNVs in a pseudobulk — retest_cnv","text":"bulk pesudobulk dataframe gamma numeric Dispersion parameter Beta-Binomial allele model allele_only whether retest using allele data","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/retest_cnv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"retest CNVs in a pseudobulk — retest_cnv","text":"dataframe segments CNV posterior information","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/run_allele_hmm.html","id":null,"dir":"Reference","previous_headings":"","what":"allele-only HMM — run_allele_hmm","title":"allele-only HMM — run_allele_hmm","text":"allele-HMM","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/run_allele_hmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"allele-only HMM — run_allele_hmm","text":"","code":"run_allele_hmm(   pAD,   DP,   p_s,   t = 1e-05,   theta_min = 0.08,   gamma = 20,   prior = NULL )"},{"path":"https://kharchenkolab.github.io/numbat/reference/run_allele_hmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"allele-only HMM — run_allele_hmm","text":"pAD integer vector Paternal allele counts DP integer vector Total alelle counts p_s numeric vector Phase switch probabilities t numeric Transition probability copy number states theta_min numeric Minimum haplotype frequency deviation threshold gamma numeric Overdispersion allele-specific expression","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/run_allele_hmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"allele-only HMM — run_allele_hmm","text":"character vector Decoded states","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/run_group_hmms.html","id":null,"dir":"Reference","previous_headings":"","what":"Run multiple HMMs — run_group_hmms","title":"Run multiple HMMs — run_group_hmms","text":"Run multiple HMMs","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/run_group_hmms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run multiple HMMs — run_group_hmms","text":"","code":"run_group_hmms(   bulks,   t = 1e-04,   gamma = 20,   alpha = 1e-04,   min_genes = 10,   common_diploid = TRUE,   diploid_chroms = NULL,   allele_only = FALSE,   retest = TRUE,   run_hmm = TRUE,   segs_loh = NULL,   exclude_neu = TRUE,   ncores = 1,   verbose = FALSE,   debug = FALSE )"},{"path":"https://kharchenkolab.github.io/numbat/reference/run_group_hmms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run multiple HMMs — run_group_hmms","text":"bulks dataframe Pseudobulk profiles t numeric Transition probability gamma numeric Dispersion parameter Beta-Binomial allele model alpha numeric P value cut-determine segment clusters find_diploid common_diploid logical Whether find common diploid regions pseudobulks diploid_chroms character vector Known diploid chromosomes use baseline allele_only logical Whether use allele data run HMM retest logcial Whether retest CNVs run_hmm logical Whether run HMM segments just retest ncores integer Number cores","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/run_joint_hmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Run joint HMM on a pseudobulk profile — run_joint_hmm","title":"Run joint HMM on a pseudobulk profile — run_joint_hmm","text":"Run joint HMM pseudobulk profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/run_joint_hmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run joint HMM on a pseudobulk profile — run_joint_hmm","text":"","code":"run_joint_hmm(   pAD,   DP,   p_s,   Y_obs = 0,   lambda_ref = 0,   d_total = 0,   theta_min = 0.08,   theta_neu = 0,   bal_cnv = TRUE,   phi_del = 2^(-0.25),   phi_amp = 2^(0.25),   phi_bamp = phi_amp,   phi_bdel = phi_del,   alpha = 1,   beta = 1,   mu = 0,   sig = 1,   t = 1e-05,   gamma = 18,   prior = NULL,   exp_only = FALSE,   allele_only = FALSE,   classify_allele = FALSE,   phasing = TRUE,   debug = FALSE )"},{"path":"https://kharchenkolab.github.io/numbat/reference/run_joint_hmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run joint HMM on a pseudobulk profile — run_joint_hmm","text":"pAD integer vector Paternal allele counts DP integer vector Total alelle counts p_s numeric vector Phase switch probabilities Y_obs numeric vector Observed gene counts lambda_ref numeric vector Reference expression rates d_total integer Total library size expression counts theta_min numeric Minimum haplotype imbalance threshold phi_del numeric Expected fold change deletion phi_amp numeric Expected fold change amplification phi_bamp numeric Expected fold change balanced amplification phi_bdel numeric Expected fold change balanced deletion mu numeric Global expression bias sig numeric Global expression variance t numeric Transition probability copy number states gamma numeric Overdispersion allele-specific expression exp_only logical Whether use expression data allele_only logical Whether use allele data","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/run_numbat.html","id":null,"dir":"Reference","previous_headings":"","what":"Run workflow to decompose tumor subclones — run_numbat","title":"Run workflow to decompose tumor subclones — run_numbat","text":"Run workflow decompose tumor subclones","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/run_numbat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run workflow to decompose tumor subclones — run_numbat","text":"","code":"run_numbat(   count_mat,   lambdas_ref,   df_allele,   gtf,   genetic_map,   out_dir = \"./\",   max_iter = 2,   max_nni = 100,   t = 1e-05,   gamma = 20,   min_LLR = 5,   alpha = 1e-04,   eps = 1e-05,   max_entropy = 0.5,   init_k = 3,   min_cells = 50,   tau = 0.3,   max_cost = ncol(count_mat) * tau,   min_depth = 0,   common_diploid = TRUE,   min_overlap = 0.45,   ncores = 1,   ncores_nni = ncores,   random_init = FALSE,   segs_loh = NULL,   verbose = TRUE,   diploid_chroms = NULL,   use_loh = NULL,   min_genes = 10,   skip_nj = FALSE,   multi_allelic = TRUE,   p_multi = 1 - alpha,   plot = TRUE,   check_convergence = FALSE,   exclude_neu = TRUE )"},{"path":"https://kharchenkolab.github.io/numbat/reference/run_numbat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run workflow to decompose tumor subclones — run_numbat","text":"count_mat dgCMatrix Raw count matrices rownames genes column names cells lambdas_ref matrix Either named vector gene names names normalized expression values, matrix rownames genes columns pseudobulk names df_allele dataframe Allele counts per cell, produced preprocess_allele gtf dataframe GTF transcripts genetic_map dataframe genetic map dataframe out_dir string Output directory max_iter integer Maximum number iterations run phyologeny optimization max_nni integer Maximum number iterations run NNI ML phylogeny inference t numeric Transition probability gamma numeric Dispersion parameter Beta-Binomial allele model min_LLR numeric Minimum LLR filter CNVs eps numeric Convergence threshold ML tree search max_entropy numeric Entropy threshold filter CNVs init_k integer Number clusters initial clustering min_cells integer Minimum number cells run HMM tau numeric Factor determine max_cost function number cells (0-1) max_cost numeric Likelihood threshold collapse internal branches min_depth integer Minimum allele depth common_diploid logical Whether find common diploid regions group peusdobulks ncores integer Number threads use ncores_nni integer Number threads use NNI segs_loh dataframe Segments clonal LOH excluded diploid_chroms vector Known diploid chromosomes use_loh logical Whether include LOH regions expression baseline skip_nj logical Whether skip NJ tree construction use UPGMA multi_allelic logical Whether call multi-allelic CNVs","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/run_numbat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run workflow to decompose tumor subclones — run_numbat","text":"status code","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/score_mut.html","id":null,"dir":"Reference","previous_headings":"","what":"Score mutations on goodness of fit on the tree — score_mut","title":"Score mutations on goodness of fit on the tree — score_mut","text":"Score mutations goodness fit tree","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/score_mut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score mutations on goodness of fit on the tree — score_mut","text":"","code":"score_mut(gtree, geno, p_min = 0.95)"},{"path":"https://kharchenkolab.github.io/numbat/reference/score_mut_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for mutation scoring — score_mut_helper","title":"Helper for mutation scoring — score_mut_helper","text":"Helper mutation scoring","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/score_mut_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper for mutation scoring — score_mut_helper","text":"","code":"score_mut_helper(gtree, geno, s, v, p_min = 0.95)"},{"path":"https://kharchenkolab.github.io/numbat/reference/score_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"score a tree based on maximum likelihood — score_tree","title":"score a tree based on maximum likelihood — score_tree","text":"score tree based maximum likelihood","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/score_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"score a tree based on maximum likelihood — score_tree","text":"","code":"score_tree(tree, P, get_l_matrix = FALSE)"},{"path":"https://kharchenkolab.github.io/numbat/reference/score_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"score a tree based on maximum likelihood — score_tree","text":"tree phylo object P genotype probability matrix get_l_matrix whether compute whole likelihood matrix","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/score_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"score a tree based on maximum likelihood — score_tree","text":"list Likelihood scores tree","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/simes_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate simes' p — simes_p","title":"Calculate simes' p — simes_p","text":"Calculate simes' p","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/simes_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate simes' p — simes_p","text":"","code":"simes_p(p.vals, n_dim)"},{"path":"https://kharchenkolab.github.io/numbat/reference/simplify_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify the mutational history based on likelihood evidence — simplify_history","title":"Simplify the mutational history based on likelihood evidence — simplify_history","text":"Simplify mutational history based likelihood evidence","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/simplify_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify the mutational history based on likelihood evidence — simplify_history","text":"","code":"simplify_history(G, l_matrix, max_cost = 150, verbose = T)"},{"path":"https://kharchenkolab.github.io/numbat/reference/simplify_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify the mutational history based on likelihood evidence — simplify_history","text":"G igraph Mutation graph l_matrix matrix Mutation placement likelihood matrix (node mutation)","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/simplify_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify the mutational history based on likelihood evidence — simplify_history","text":"igraph Mutation graph","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/smooth_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"filtering, normalization and capping — smooth_expression","title":"filtering, normalization and capping — smooth_expression","text":"filtering, normalization capping","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/smooth_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filtering, normalization and capping — smooth_expression","text":"","code":"smooth_expression(count_mat, lambdas_ref, gtf, window = 101, verbose = FALSE)"},{"path":"https://kharchenkolab.github.io/numbat/reference/smooth_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filtering, normalization and capping — smooth_expression","text":"count_mat dgCMatrix Gene expression counts lambdas_ref matrix Reference expression profiles gtf dataframe Transcript gtf","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/smooth_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filtering, normalization and capping — smooth_expression","text":"dataframe Log(x+1) transformed normalized expression values single cells","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/smooth_segs.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth the segments after HMM decoding — smooth_segs","title":"Smooth the segments after HMM decoding — smooth_segs","text":"Smooth segments HMM decoding","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/smooth_segs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth the segments after HMM decoding — smooth_segs","text":"","code":"smooth_segs(bulk, min_genes = 10)"},{"path":"https://kharchenkolab.github.io/numbat/reference/smooth_segs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth the segments after HMM decoding — smooth_segs","text":"bulk dataframe Pseudobulk profile min_genes integer Minimum number genes call segment","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/smooth_segs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smooth the segments after HMM decoding — smooth_segs","text":"dataframe Pseudobulk profile","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/switch_prob_cm.html","id":null,"dir":"Reference","previous_headings":"","what":"predict phase switch probablity as a function of genetic distance — switch_prob_cm","title":"predict phase switch probablity as a function of genetic distance — switch_prob_cm","text":"predict phase switch probablity function genetic distance","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/switch_prob_cm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"predict phase switch probablity as a function of genetic distance — switch_prob_cm","text":"","code":"switch_prob_cm(d, lambda = 1, min_p = 1e-10)"},{"path":"https://kharchenkolab.github.io/numbat/reference/switch_prob_cm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"predict phase switch probablity as a function of genetic distance — switch_prob_cm","text":"d numeric vector Genetic distance cM lambda numeric Phase switch rate min_p numeric Minimum phase switch probability","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/switch_prob_cm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"predict phase switch probablity as a function of genetic distance — switch_prob_cm","text":"numeric vector Phase switch probability","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/test_multi_allelic.html","id":null,"dir":"Reference","previous_headings":"","what":"test for multi-allelic CNVs — test_multi_allelic","title":"test for multi-allelic CNVs — test_multi_allelic","text":"test multi-allelic CNVs","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/test_multi_allelic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test for multi-allelic CNVs — test_multi_allelic","text":"","code":"test_multi_allelic(bulks, segs_consensus, min_LLR = 5, p_min = 0.999)"},{"path":"https://kharchenkolab.github.io/numbat/reference/test_multi_allelic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"test for multi-allelic CNVs — test_multi_allelic","text":"bulks dataframe Pseudobulk profiles segs_consensus dataframe Consensus segments min_LLR numeric CNV LLR threshold filter events p_min numeric Probability threshold call multi-allelic events","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/test_multi_allelic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"test for multi-allelic CNVs — test_multi_allelic","text":"dataframe Consensus segments annotated multi-allelic events","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/theta_hat_roll.html","id":null,"dir":"Reference","previous_headings":"","what":"Rolling estimate of imbalance level theta — theta_hat_roll","title":"Rolling estimate of imbalance level theta — theta_hat_roll","text":"Rolling estimate imbalance level theta","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/theta_hat_roll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rolling estimate of imbalance level theta — theta_hat_roll","text":"","code":"theta_hat_roll(major_count, minor_count, h)"},{"path":"https://kharchenkolab.github.io/numbat/reference/theta_hat_roll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rolling estimate of imbalance level theta — theta_hat_roll","text":"major_count vector major allele count minor_count vector minor allele count h window size","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/theta_hat_roll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rolling estimate of imbalance level theta — theta_hat_roll","text":"rolling estimate theta","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/theta_hat_seg.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate of imbalance level theta in a segment — theta_hat_seg","title":"Estimate of imbalance level theta in a segment — theta_hat_seg","text":"Estimate imbalance level theta segment","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/theta_hat_seg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate of imbalance level theta in a segment — theta_hat_seg","text":"","code":"theta_hat_seg(major_count, minor_count)"},{"path":"https://kharchenkolab.github.io/numbat/reference/theta_hat_seg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate of imbalance level theta in a segment — theta_hat_seg","text":"major_count vector major allele count minor_count vector minor allele count","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/theta_hat_seg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate of imbalance level theta in a segment — theta_hat_seg","text":"estimate theta","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/to_phylo.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the phylogeny from tidygraph to igraph object — to_phylo","title":"Convert the phylogeny from tidygraph to igraph object — to_phylo","text":"Convert phylogeny tidygraph igraph object","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/to_phylo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the phylogeny from tidygraph to igraph object — to_phylo","text":"","code":"to_phylo(gtree)"},{"path":"https://kharchenkolab.github.io/numbat/reference/to_phylo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the phylogeny from tidygraph to igraph object — to_phylo","text":"gtree tbl_graph single-cell phylogeny","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/to_phylo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the phylogeny from tidygraph to igraph object — to_phylo","text":"phylo single-cell phylogeny","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/transfer_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate the direct upstream or downstream node on the edges — transfer_links","title":"Annotate the direct upstream or downstream node on the edges — transfer_links","text":"Annotate direct upstream downstream node edges","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/transfer_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate the direct upstream or downstream node on the edges — transfer_links","text":"","code":"transfer_links(G)"},{"path":"https://kharchenkolab.github.io/numbat/reference/transfer_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate the direct upstream or downstream node on the edges — transfer_links","text":"G igraph Mutation graph","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/transfer_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate the direct upstream or downstream node on the edges — transfer_links","text":"igraph Mutation graph","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/viterbi_allele.html","id":null,"dir":"Reference","previous_headings":"","what":"Viterbi algorithm for allele HMM — viterbi_allele","title":"Viterbi algorithm for allele HMM — viterbi_allele","text":"Viterbi algorithm allele HMM","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/viterbi_allele.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Viterbi algorithm for allele HMM — viterbi_allele","text":"","code":"viterbi_allele(hmm)"},{"path":"https://kharchenkolab.github.io/numbat/reference/viterbi_joint.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized viterbi algorithm for joint HMM — viterbi_joint","title":"Generalized viterbi algorithm for joint HMM — viterbi_joint","text":"Generalized viterbi algorithm joint HMM","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/viterbi_joint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized viterbi algorithm for joint HMM — viterbi_joint","text":"","code":"viterbi_joint(hmm)"},{"path":"https://kharchenkolab.github.io/numbat/reference/viterbi_loh.html","id":null,"dir":"Reference","previous_headings":"","what":"Viterbi for clonal LOH detection — viterbi_loh","title":"Viterbi for clonal LOH detection — viterbi_loh","text":"Viterbi clonal LOH detection","code":""},{"path":"https://kharchenkolab.github.io/numbat/reference/viterbi_loh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Viterbi for clonal LOH detection — viterbi_loh","text":"","code":"viterbi_loh(hmm, ...)"},{"path":"https://kharchenkolab.github.io/numbat/news/index.html","id":"numbat-0-1-3","dir":"Changelog","previous_headings":"","what":"numbat 0.1.3","title":"numbat 0.1.3","text":"Speed NNI using RcppParallel (#34). 10x faster much memory efficient (memory requirement constant respect number threads).","code":""}]
